function revslider_showDoubleJqueryError(b) {
    var a = "Revolution Slider Error: You have some jquery.js library include that comes after the revolution files js include.";
    a += "<br> This includes make eliminates the revolution slider libraries, and make it not work.";
    a += "<br><br> To fix it you can:<br>&nbsp;&nbsp;&nbsp; 1. In the Slider Settings -> Troubleshooting set option:  <strong><b>Put JS Includes To Body</b></strong> option to true.";
    a += "<br>&nbsp;&nbsp;&nbsp; 2. Find the double jquery.js include and remove it.";
    a = "<span style='font-size:16px;color:#BC0C06;'>" + a + "</span>";
    jQuery(b).show().html(a)
}(function(a0, aJ) {
    function aQ(F, H) {
        if (H.navigationStyle == "preview1" || H.navigationStyle == "preview3" || H.navigationStyle == "preview4") {
            H.soloArrowLeftHalign = "left";
            H.soloArrowLeftValign = "center";
            H.soloArrowLeftHOffset = 0;
            H.soloArrowLeftVOffset = 0;
            H.soloArrowRightHalign = "right";
            H.soloArrowRightValign = "center";
            H.soloArrowRightHOffset = 0;
            H.soloArrowRightVOffset = 0;
            H.navigationArrows = "solo"
        }
        H.desktop = !navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry|BB10|mobi|tablet|opera mini|nexus 7)/i);
        if (H.fullWidth != "on" && H.fullScreen != "on") {
            H.autoHeight = "off"
        }
        if (H.fullScreen == "on") {
            H.autoHeight = "on"
        }
        if (H.fullWidth != "on" && H.fullScreen != "on") {
            forceFulWidth = "off"
        }
        if (H.fullWidth == "on" && H.autoHeight == "off") {
            F.css({
                maxHeight: H.startheight + "px"
            })
        }
        if (aC() && H.hideThumbsOnMobile == "on" && H.navigationType == "thumb") {
            H.navigationType = "none"
        }
        if (aC() && H.hideBulletsOnMobile == "on" && H.navigationType == "bullet") {
            H.navigationType = "none"
        }
        if (aC() && H.hideBulletsOnMobile == "on" && H.navigationType == "both") {
            H.navigationType = "none"
        }
        if (aC() && H.hideArrowsOnMobile == "on") {
            H.navigationArrows = "none"
        }
        if (H.forceFullWidth == "on" && F.closest(".forcefullwidth_wrapper_tp_banner").length == 0) {
            var D = F.parent().offset().left;
            var r = F.parent().css("marginBottom");
            var B = F.parent().css("marginTop");
            if (r == aJ) {
                r = 0
            }
            if (B == aJ) {
                B = 0
            }
            F.parent().wrap('<div style="position:relative;width:100%;height:auto;margin-top:' + B + ";margin-bottom:" + r + '" class="forcefullwidth_wrapper_tp_banner"></div>');
            F.closest(".forcefullwidth_wrapper_tp_banner").append('<div class="tp-fullwidth-forcer" style="width:100%;height:' + F.height() + 'px"></div>');
            F.css({
                backgroundColor: F.parent().css("backgroundColor"),
                backgroundImage: F.parent().css("backgroundImage")
            });
            F.parent().css({
                left: 0 - D + "px",
                position: "absolute",
                width: a0(window).width()
            });
            H.width = a0(window).width()
        }
        try {
            if (H.hideThumbsUnderResolution > a0(window).width() && H.hideThumbsUnderResolution != 0) {
                F.parent().find(".tp-bullets.tp-thumbs").css({
                    display: "none"
                })
            } else {
                F.parent().find(".tp-bullets.tp-thumbs").css({
                    display: "block"
                })
            }
        } catch (J) {}
        if (!F.hasClass("revslider-initialised")) {
            F.addClass("revslider-initialised");
            if (F.attr("id") == aJ) {
                F.attr("id", "revslider-" + Math.round(Math.random() * 1000 + 5))
            }
            H.firefox13 = false;
            H.ie = !a0.support.opacity;
            H.ie9 = document.documentMode == 9;
            H.origcd = H.delay;
            var q = a0.fn.jquery.split("."),
                I = parseFloat(q[0]),
                j = parseFloat(q[1]),
                K = parseFloat(q[2] || "0");
            if (I == 1 && j < 7) {
                F.html('<div style="text-align:center; padding:40px 0px; font-size:20px; color:#992222;"> The Current Version of jQuery:' + q + " <br>Please update your jQuery Version to min. 1.7 in Case you wish to use the Revolution Slider Plugin</div>")
            }
            if (I > 1) {
                H.ie = false
            }
            if (!a0.support.transition) {
                a0.fn.transition = a0.fn.animate
            }
            F.find(".caption").each(function() {
                a0(this).addClass("tp-caption")
            });
            if (aC()) {
                F.find(".tp-caption").each(function() {
                    if (a0(this).data("autoplay") == true) {
                        a0(this).data("autoplay", false)
                    }
                })
            }
            var m = 0;
            var s = 0;
            var a = 0;
            var l = "http";
            if (location.protocol === "https:") {
                l = "https"
            }
            F.find(".tp-caption iframe").each(function(d) {
                try {
                    if (a0(this).attr("src").indexOf("you") > 0 && m == 0) {
                        m = 1;
                        var u = document.createElement("script");
                        var k = "https";
                        u.src = k + "://www.youtube.com/iframe_api";
                        var b = document.getElementsByTagName("script")[0];
                        var g = true;
                        a0("head").find("*").each(function() {
                            if (a0(this).attr("src") == k + "://www.youtube.com/iframe_api") {
                                g = false
                            }
                        });
                        if (g) {
                            b.parentNode.insertBefore(u, b)
                        }
                    }
                } catch (p) {}
            });
            F.find(".tp-caption iframe").each(function(d) {
                try {
                    if (a0(this).attr("src").indexOf("vim") > 0 && s == 0) {
                        s = 1;
                        var o = document.createElement("script");
                        o.src = l + "://a.vimeocdn.com/js/froogaloop2.min.js";
                        var k = document.getElementsByTagName("script")[0];
                        var b = true;
                        a0("head").find("*").each(function() {
                            if (a0(this).attr("src") == l + "://a.vimeocdn.com/js/froogaloop2.min.js") {
                                b = false
                            }
                        });
                        if (b) {
                            k.parentNode.insertBefore(o, k)
                        }
                    }
                } catch (g) {}
            });
            F.find(".tp-caption video").each(function(b) {
                a0(this).removeClass("video-js").removeClass("vjs-default-skin");
                a0(this).attr("preload", "");
                a0(this).css({
                    display: "none"
                })
            });
            if (H.shuffle == "on") {
                for (var e = 0; e < F.find(">ul:first-child >li").length; e++) {
                    var t = Math.round(Math.random() * F.find(">ul:first-child >li").length);
                    F.find(">ul:first-child >li:eq(" + t + ")").prependTo(F.find(">ul:first-child"))
                }
            }
            H.slots = 4;
            H.act = -1;
            H.next = 0;
            if (H.startWithSlide != aJ) {
                H.next = H.startWithSlide
            }
            var G = aL("#")[0];
            if (G.length < 9) {
                if (G.split("slide").length > 1) {
                    var h = parseInt(G.split("slide")[1], 0);
                    if (h < 1) {
                        h = 1
                    }
                    if (h > F.find(">ul:first >li").length) {
                        h = F.find(">ul:first >li").length
                    }
                    H.next = h - 1
                }
            }
            H.firststart = 1;
            if (H.navigationHOffset == aJ) {
                H.navOffsetHorizontal = 0
            }
            if (H.navigationVOffset == aJ) {
                H.navOffsetVertical = 0
            }
            F.append('<div class="tp-loader ' + H.spinner + '"><div class="dot1"></div><div class="dot2"></div><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div>');
            if (F.find(".tp-bannertimer").length == 0) {
                F.append('<div class="tp-bannertimer" style="visibility:hidden"></div>')
            }
            var z = F.find(".tp-bannertimer");
            if (z.length > 0) {
                z.css({
                    width: "0%"
                })
            }
            F.addClass("tp-simpleresponsive");
            H.container = F;
            H.slideamount = F.find(">ul:first >li").length;
            if (F.height() == 0) {
                F.height(H.startheight)
            }
            if (H.startwidth == aJ || H.startwidth == 0) {
                H.startwidth = F.width()
            }
            if (H.startheight == aJ || H.startheight == 0) {
                H.startheight = F.height()
            }
            H.width = F.width();
            H.height = F.height();
            H.bw = H.startwidth / F.width();
            H.bh = H.startheight / F.height();
            if (H.width != H.startwidth) {
                H.height = Math.round(H.startheight * (H.width / H.startwidth));
                F.height(H.height)
            }
            if (H.shadow != 0) {
                F.parent().append('<div class="tp-bannershadow tp-shadow' + H.shadow + '"></div>');
                var D = 0;
                if (H.forceFullWidth == "on") {
                    D = 0 - H.container.parent().offset().left
                }
                F.parent().find(".tp-bannershadow").css({
                    width: H.width,
                    left: D
                })
            }
            F.find("ul").css({
                display: "none"
            });
            var c = F;
            F.find("ul").css({
                display: "block"
            });
            aR(F, H);
            if (H.parallax != "off") {
                aa(F, H)
            }
            if (H.slideamount > 1) {
                a4(F, H)
            }
            if (H.slideamount > 1 && H.navigationType == "thumb") {
                aY(F, H)
            }
            if (H.slideamount > 1) {
                aZ(F, H)
            }
            if (H.keyboardNavigation == "on") {
                aS(F, H)
            }
            try {
                a2(F, H)
            } catch (J) {}
            if (H.hideThumbs > 0) {
                aW(F, H)
            }
            ag(F, H);
            if (H.slideamount > 1) {
                ae(F, H)
            }
            setTimeout(function() {
                F.trigger("revolution.slide.onloaded")
            }, 500);
            a0("body").data("rs-fullScreenMode", false);
            a0(window).on("mozfullscreenchange webkitfullscreenchange fullscreenchange", function() {
                a0("body").data("rs-fullScreenMode", !a0("body").data("rs-fullScreenMode"));
                if (a0("body").data("rs-fullScreenMode")) {
                    setTimeout(function() {
                        a0(window).trigger("resize")
                    }, 200)
                }
            });
            a0(window).resize(function() {
                if (a0("body").find(F) != 0) {
                    if (H.forceFullWidth == "on") {
                        var b = H.container.closest(".forcefullwidth_wrapper_tp_banner").offset().left;
                        H.container.parent().css({
                            left: 0 - b + "px",
                            width: a0(window).width()
                        })
                    }
                }
                if (F.outerWidth(true) != H.width || F.is(":hidden")) {
                    aK(F, H)
                }
            });
            try {
                if (H.hideThumbsUnderResoluition != 0 && H.navigationType == "thumb") {
                    if (H.hideThumbsUnderResoluition > a0(window).width()) {
                        a0(".tp-bullets").css({
                            display: "none"
                        })
                    } else {
                        a0(".tp-bullets").css({
                            display: "block"
                        })
                    }
                }
            } catch (J) {}
            F.find(".tp-scrollbelowslider").on("click", function() {
                var b = 0;
                try {
                    b = a0("body").find(H.fullScreenOffsetContainer).height()
                } catch (d) {}
                try {
                    b = b - a0(this).data("scrolloffset")
                } catch (d) {}
                a0("body,html").animate({
                    scrollTop: F.offset().top + F.find(">ul >li").height() - b + "px"
                }, {
                    duration: 400
                })
            });
            var f = F.parent();
            if (a0(window).width() < H.hideSliderAtLimit) {
                F.trigger("stoptimer");
                if (f.css("display") != "none") {
                    f.data("olddisplay", f.css("display"))
                }
                f.css({
                    display: "none"
                })
            }
        }
    }
    a0.fn.extend({
        revolution: function(a) {
            defaults = {
                delay: 9000,
                startheight: 500,
                startwidth: 960,
                fullScreenAlignForce: "off",
                autoHeight: "off",
                hideTimerBar: "on",
                hideNavDelayOnMobile: 1500,
                thumbWidth: 100,
                thumbHeight: 50,
                thumbAmount: 3,
                navigationType: "bullet",
                navigationArrows: "solo",
                navigationInGrid: "off",
                hideThumbsOnMobile: "off",
                hideBulletsOnMobile: "off",
                hideArrowsOnMobile: "off",
                hideThumbsUnderResoluition: 0,
                navigationStyle: "round",
                navigationHAlign: "center",
                navigationVAlign: "top",
                navigationHOffset: 0,
                navigationVOffset: 20,
                soloArrowLeftHalign: "left",
                soloArrowLeftValign: "center",
                soloArrowLeftHOffset: 20,
                soloArrowLeftVOffset: 0,
                soloArrowRightHalign: "right",
                soloArrowRightValign: "center",
                soloArrowRightHOffset: 20,
                soloArrowRightVOffset: 0,
                keyboardNavigation: "on",
                touchenabled: "on",
                onHoverStop: "on",
                stopAtSlide: -1,
                stopAfterLoops: -1,
                hideCaptionAtLimit: 0,
                hideAllCaptionAtLimit: 0,
                hideSliderAtLimit: 0,
                shadow: 0,
                fullWidth: "off",
                fullScreen: "off",
                minFullScreenHeight: 0,
                fullScreenOffsetContainer: "",
                fullScreenOffset: "0",
                dottedOverlay: "none",
                forceFullWidth: "off",
                spinner: "spinner1",
                swipe_velocity: 0.4,
                swipe_max_touches: 1,
                swipe_min_touches: 1,
                drag_block_vertical: false,
                isJoomla: false,
                parallax: "off",
                parallaxLevels: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85],
                parallaxBgFreeze: "off",
                parallaxOpacity: "on",
                parallaxDisableOnMobile: "off"
            };
            a = a0.extend({}, defaults, a);
            return this.each(function() {
                try {} catch (b) {}
                if (punchgs.TweenLite == aJ) {
                    try {} catch (b) {}
                    return false
                }
                punchgs.force3D = true;
                try {} catch (b) {}
                punchgs.TweenLite.lagSmoothing(1000, 16);
                punchgs.force3D = "true";
                aQ(a0(this), a);
                try {} catch (b) {}
            })
        },
        revscroll: function(a) {
            return this.each(function() {
                var b = a0(this);
                a0("body,html").animate({
                    scrollTop: b.offset().top + b.find(">ul >li").height() - a + "px"
                }, {
                    duration: 400
                })
            })
        },
        revredraw: function(a) {
            return this.each(function() {
                var b = a0(this);
                var d = b.parent().find(".tp-bannertimer");
                var c = d.data("opt");
                aK(b, c)
            })
        },
        revpause: function(a) {
            return this.each(function() {
                var b = a0(this);
                b.data("conthover", 1);
                b.data("conthover-changed", 1);
                b.trigger("revolution.slide.onpause");
                var d = b.parent().find(".tp-bannertimer");
                var c = d.data("opt");
                c.bannertimeronpause = true;
                b.trigger("stoptimer")
            })
        },
        revresume: function(a) {
            return this.each(function() {
                var b = a0(this);
                b.data("conthover", 0);
                b.data("conthover-changed", 1);
                b.trigger("revolution.slide.onresume");
                var d = b.parent().find(".tp-bannertimer");
                var c = d.data("opt");
                c.bannertimeronpause = false;
                b.trigger("starttimer")
            })
        },
        revnext: function(a) {
            return this.each(function() {
                var b = a0(this);
                b.parent().find(".tp-rightarrow").click()
            })
        },
        revprev: function(a) {
            return this.each(function() {
                var b = a0(this);
                b.parent().find(".tp-leftarrow").click()
            })
        },
        revmaxslide: function(a) {
            return a0(this).find(">ul:first-child >li").length
        },
        revcurrentslide: function(b) {
            var d = a0(this);
            var c = d.parent().find(".tp-bannertimer");
            var a = c.data("opt");
            return a.act
        },
        revlastslide: function(b) {
            var d = a0(this);
            var c = d.parent().find(".tp-bannertimer");
            var a = c.data("opt");
            return a.lastslide
        },
        revshowslide: function(a) {
            return this.each(function() {
                var b = a0(this);
                b.data("showus", a);
                b.parent().find(".tp-rightarrow").click()
            })
        }
    });
    var aL = function(d) {
        var b = [],
            f;
        var c = window.location.href.slice(window.location.href.indexOf(d) + 1).split("_");
        for (var a = 0; a < c.length; a++) {
            c[a] = c[a].replace("%3D", "=");
            f = c[a].split("=");
            b.push(f[0]);
            b[f[0]] = f[1]
        }
        return b
    };
    var aK = function(e, b) {
        try {
            if (b.hideThumbsUnderResoluition != 0 && b.navigationType == "thumb") {
                if (b.hideThumbsUnderResoluition > a0(window).width()) {
                    a0(".tp-bullets").css({
                        display: "none"
                    })
                } else {
                    a0(".tp-bullets").css({
                        display: "block"
                    })
                }
            }
        } catch (h) {}
        e.find(".defaultimg").each(function(a) {
            aH(a0(this), b)
        });
        var d = e.parent();
        if (a0(window).width() < b.hideSliderAtLimit) {
            e.trigger("stoptimer");
            if (d.css("display") != "none") {
                d.data("olddisplay", d.css("display"))
            }
            d.css({
                display: "none"
            })
        } else {
            if (e.is(":hidden")) {
                if (d.data("olddisplay") != aJ && d.data("olddisplay") != "undefined" && d.data("olddisplay") != "none") {
                    d.css({
                        display: d.data("olddisplay")
                    })
                } else {
                    d.css({
                        display: "block"
                    })
                }
                e.trigger("restarttimer");
                setTimeout(function() {
                    aK(e, b)
                }, 150)
            }
        }
        var p = 0;
        if (b.forceFullWidth == "on") {
            p = 0 - b.container.parent().offset().left
        }
        try {
            e.parent().find(".tp-bannershadow").css({
                width: b.width,
                left: p
            })
        } catch (h) {}
        var m = e.find(">ul >li:eq(" + b.act + ") .slotholder");
        var j = e.find(">ul >li:eq(" + b.next + ") .slotholder");
        aG(e, b, e);
        punchgs.TweenLite.set(j.find(".defaultimg"), {
            opacity: 0
        });
        m.find(".defaultimg").css({
            opacity: 1
        });
        j.find(".defaultimg").each(function() {
            var a = a0(this);
            if (a.data("kenburn") != aJ) {
                a.data("kenburn").restart();
                ap(e, b, true)
            }
        });
        var g = e.find(">ul >li:eq(" + b.next + ")");
        var k = e.parent().find(".tparrows");
        if (k.hasClass("preview2")) {
            k.css({
                width: parseInt(k.css("minWidth"), 0)
            })
        }
        az(g, b, true);
        aO(e, b)
    };
    var aP = function(b, d) {
        var c = a0('<div style="display:none;"/>').appendTo(a0("body"));
        c.html("<!--[if " + (d || "") + " IE " + (b || "") + "]><a>&nbsp;</a><![endif]-->");
        var a = c.find("a").length;
        c.remove();
        return a
    };
    var aI = function(b, a) {
        ag(a, b)
    };
    var a4 = function(b, d) {
        var c = "hidebullets";
        if (d.hideThumbs == 0) {
            c = ""
        }
        if (d.navigationType == "bullet" || d.navigationType == "both") {
            b.parent().append('<div class="tp-bullets"></div>')
        }
        var a = b.parent().find(".tp-bullets");
        b.find(">ul:first >li").each(function(g) {
            var h = b.find(">ul:first >li:eq(" + g + ") img:first").attr("src");
            a.append('<div class="bullet"></div>');
            var f = a.find(".bullet:first")
        });
        a.find(".bullet").each(function(f) {
            var e = a0(this);
            if (f == d.slideamount - 1) {
                e.addClass("last")
            }
            if (f == 0) {
                e.addClass("first")
            }
            e.click(function() {
                var g = false;
                if (d.navigationArrows == "withbullet" || d.navigationArrows == "nexttobullets") {
                    if (e.index() - 1 == d.act) {
                        g = true
                    }
                } else {
                    if (e.index() == d.act) {
                        g = true
                    }
                }
                if (d.transition == 0 && !g) {
                    if (d.navigationArrows == "withbullet" || d.navigationArrows == "nexttobullets") {
                        d.next = e.index() - 1
                    } else {
                        d.next = e.index()
                    }
                    aI(d, b)
                }
            })
        });
        a.append('<div class="tpclear"></div>');
        aO(b, d)
    };
    var aZ = function(g, j) {
        function b(a) {
            g.parent().append('<div style="' + c + '" class="tp-' + a + "arrow " + d + " tparrows " + h + '"><div class="tp-arr-allwrapper"><div class="tp-arr-iwrapper"><div class="tp-arr-imgholder"></div><div class="tp-arr-imgholder2"></div><div class="tp-arr-titleholder"></div><div class="tp-arr-subtitleholder"></div></div></div></div>')
        }
        var f = g.find(".tp-bullets");
        var c = "",
            d = "hidearrows";
        if (j.hideThumbs == 0) {
            d = ""
        }
        var h = j.navigationStyle;
        if (j.navigationArrows == "none") {
            c = "visibility:hidden;display:none"
        }
        j.soloArrowStyle = "default " + j.navigationStyle;
        if (j.navigationArrows != "none" && j.navigationArrows != "nexttobullets") {
            h = j.soloArrowStyle
        }
        b("left");
        b("right");
        g.parent().find(".tp-rightarrow").click(function() {
            if (j.transition == 0) {
                if (g.data("showus") != aJ && g.data("showus") != -1) {
                    j.next = g.data("showus") - 1
                } else {
                    j.next = j.next + 1
                }
                g.data("showus", -1);
                if (j.next >= j.slideamount) {
                    j.next = 0
                }
                if (j.next < 0) {
                    j.next = 0
                }
                if (j.act != j.next) {
                    aI(j, g)
                }
            }
        });
        g.parent().find(".tp-leftarrow").click(function() {
            if (j.transition == 0) {
                j.next = j.next - 1;
                j.leftarrowpressed = 1;
                if (j.next < 0) {
                    j.next = j.slideamount - 1
                }
                aI(j, g)
            }
        });
        aO(g, j)
    };
    var aS = function(b, a) {
        a0(document).keydown(function(c) {
            if (a.transition == 0 && c.keyCode == 39) {
                if (b.data("showus") != aJ && b.data("showus") != -1) {
                    a.next = b.data("showus") - 1
                } else {
                    a.next = a.next + 1
                }
                b.data("showus", -1);
                if (a.next >= a.slideamount) {
                    a.next = 0
                }
                if (a.next < 0) {
                    a.next = 0
                }
                if (a.act != a.next) {
                    aI(a, b)
                }
            }
            if (a.transition == 0 && c.keyCode == 37) {
                a.next = a.next - 1;
                a.leftarrowpressed = 1;
                if (a.next < 0) {
                    a.next = a.slideamount - 1
                }
                aI(a, b)
            }
        });
        aO(b, a)
    };
    var a2 = function(b, d) {
        if (d.touchenabled == "on") {
            try {
                var c = Hammer(b, {
                    drag_block_vertical: d.drag_block_vertical,
                    drag_lock_to_axis: true,
                    swipe_velocity: d.swipe_velocity,
                    swipe_max_touches: d.swipe_max_touches,
                    swipe_min_touches: d.swipe_min_touches,
                    prevent_default: false
                });
                c.on("swipeleft", function() {
                    if (d.transition == 0) {
                        d.next = d.next + 1;
                        if (d.next == d.slideamount) {
                            d.next = 0
                        }
                        aI(d, b)
                    }
                });
                c.on("swiperight", function() {
                    if (d.transition == 0) {
                        d.next = d.next - 1;
                        d.leftarrowpressed = 1;
                        if (d.next < 0) {
                            d.next = d.slideamount - 1
                        }
                        aI(d, b)
                    }
                });
                c.on("swipeup", function() {
                    a0("html, body").animate({
                        scrollTop: b.offset().top + b.height() + "px"
                    })
                });
                c.on("swipedown", function() {
                    a0("html, body").animate({
                        scrollTop: b.offset().top - a0(window).height() + "px"
                    })
                })
            } catch (a) {}
        }
    };
    var aW = function(d, b) {
        var f = d.parent().find(".tp-bullets");
        var c = d.parent().find(".tparrows");
        if (f == null) {
            d.append('<div class=".tp-bullets"></div>');
            var f = d.parent().find(".tp-bullets")
        }
        if (c == null) {
            d.append('<div class=".tparrows"></div>');
            var c = d.parent().find(".tparrows")
        }
        d.data("hideThumbs", b.hideThumbs);
        f.addClass("hidebullets");
        c.addClass("hidearrows");
        if (aC()) {
            try {
                d.hammer().on("touch", function() {
                    d.addClass("hovered");
                    if (b.onHoverStop == "on") {
                        d.trigger("stoptimer")
                    }
                    clearTimeout(d.data("hideThumbs"));
                    f.removeClass("hidebullets");
                    c.removeClass("hidearrows")
                });
                d.hammer().on("release", function() {
                    d.removeClass("hovered");
                    d.trigger("playtimer");
                    if (!d.hasClass("hovered") && !f.hasClass("hovered")) {
                        d.data("hideThumbs", setTimeout(function() {
                            f.addClass("hidebullets");
                            c.addClass("hidearrows");
                            d.trigger("playtimer")
                        }, b.hideNavDelayOnMobile))
                    }
                })
            } catch (a) {}
        } else {
            f.hover(function() {
                b.overnav = true;
                if (b.onHoverStop == "on") {
                    d.trigger("stoptimer")
                }
                f.addClass("hovered");
                clearTimeout(d.data("hideThumbs"));
                f.removeClass("hidebullets");
                c.removeClass("hidearrows")
            }, function() {
                b.overnav = false;
                d.trigger("playtimer");
                f.removeClass("hovered");
                if (!d.hasClass("hovered") && !f.hasClass("hovered")) {
                    d.data("hideThumbs", setTimeout(function() {
                        f.addClass("hidebullets");
                        c.addClass("hidearrows")
                    }, b.hideThumbs))
                }
            });
            c.hover(function() {
                b.overnav = true;
                if (b.onHoverStop == "on") {
                    d.trigger("stoptimer")
                }
                f.addClass("hovered");
                clearTimeout(d.data("hideThumbs"));
                f.removeClass("hidebullets");
                c.removeClass("hidearrows")
            }, function() {
                b.overnav = false;
                d.trigger("playtimer");
                f.removeClass("hovered")
            });
            d.on("mouseenter", function() {
                d.addClass("hovered");
                if (b.onHoverStop == "on") {
                    d.trigger("stoptimer")
                }
                clearTimeout(d.data("hideThumbs"));
                f.removeClass("hidebullets");
                c.removeClass("hidearrows")
            });
            d.on("mouseleave", function() {
                d.removeClass("hovered");
                d.trigger("playtimer");
                if (!d.hasClass("hovered") && !f.hasClass("hovered")) {
                    d.data("hideThumbs", setTimeout(function() {
                        f.addClass("hidebullets");
                        c.addClass("hidearrows")
                    }, b.hideThumbs))
                }
            })
        }
    };
    var aO = function(m, d) {
        var b = m.parent();
        var g = b.find(".tp-bullets");
        if (d.navigationType == "thumb") {
            g.find(".thumb").each(function(a) {
                var f = a0(this);
                f.css({
                    width: d.thumbWidth * d.bw + "px",
                    height: d.thumbHeight * d.bh + "px"
                })
            });
            var p = g.find(".tp-mask");
            p.width(d.thumbWidth * d.thumbAmount * d.bw);
            p.height(d.thumbHeight * d.bh);
            p.parent().width(d.thumbWidth * d.thumbAmount * d.bw);
            p.parent().height(d.thumbHeight * d.bh)
        }
        var c = b.find(".tp-leftarrow");
        var k = b.find(".tp-rightarrow");
        if (d.navigationType == "thumb" && d.navigationArrows == "nexttobullets") {
            d.navigationArrows = "solo"
        }
        if (d.navigationArrows == "nexttobullets") {
            c.prependTo(g).css({
                "float": "left"
            });
            k.insertBefore(g.find(".tpclear")).css({
                "float": "left"
            })
        }
        var j = 0;
        if (d.forceFullWidth == "on") {
            j = 0 - d.container.parent().offset().left
        }
        var h = 0,
            e = 0;
        if (d.navigationInGrid == "on") {
            h = m.width() > d.startwidth ? (m.width() - d.startwidth) / 2 : 0, e = m.height() > d.startheight ? (m.height() - d.startheight) / 2 : 0
        }
        if (d.navigationArrows != "none" && d.navigationArrows != "nexttobullets") {
            c.css({
                position: "absolute"
            });
            k.css({
                position: "absolute"
            });
            if (d.soloArrowLeftValign == "center") {
                c.css({
                    top: "50%",
                    marginTop: d.soloArrowLeftVOffset - Math.round(c.innerHeight() / 2) + "px"
                })
            }
            if (d.soloArrowLeftValign == "bottom") {
                c.css({
                    top: "auto",
                    bottom: 0 + d.soloArrowLeftVOffset + "px"
                })
            }
            if (d.soloArrowLeftValign == "top") {
                c.css({
                    bottom: "auto",
                    top: 0 + d.soloArrowLeftVOffset + "px"
                })
            }
            if (d.soloArrowLeftHalign == "center") {
                c.css({
                    left: "50%",
                    marginLeft: j + d.soloArrowLeftHOffset - Math.round(c.innerWidth() / 2) + "px"
                })
            }
            if (d.soloArrowLeftHalign == "left") {
                c.css({
                    left: h + d.soloArrowLeftHOffset + j + "px"
                })
            }
            if (d.soloArrowLeftHalign == "right") {
                c.css({
                    right: h + d.soloArrowLeftHOffset - j + "px"
                })
            }
            if (d.soloArrowRightValign == "center") {
                k.css({
                    top: "50%",
                    marginTop: d.soloArrowRightVOffset - Math.round(k.innerHeight() / 2) + "px"
                })
            }
            if (d.soloArrowRightValign == "bottom") {
                k.css({
                    top: "auto",
                    bottom: 0 + d.soloArrowRightVOffset + "px"
                })
            }
            if (d.soloArrowRightValign == "top") {
                k.css({
                    bottom: "auto",
                    top: 0 + d.soloArrowRightVOffset + "px"
                })
            }
            if (d.soloArrowRightHalign == "center") {
                k.css({
                    left: "50%",
                    marginLeft: j + d.soloArrowRightHOffset - Math.round(k.innerWidth() / 2) + "px"
                })
            }
            if (d.soloArrowRightHalign == "left") {
                k.css({
                    left: h + d.soloArrowRightHOffset + j + "px"
                })
            }
            if (d.soloArrowRightHalign == "right") {
                k.css({
                    right: h + d.soloArrowRightHOffset - j + "px"
                })
            }
            if (c.position() != null) {
                c.css({
                    top: Math.round(parseInt(c.position().top, 0)) + "px"
                })
            }
            if (k.position() != null) {
                k.css({
                    top: Math.round(parseInt(k.position().top, 0)) + "px"
                })
            }
        }
        if (d.navigationArrows == "none") {
            c.css({
                visibility: "hidden"
            });
            k.css({
                visibility: "hidden"
            })
        }
        if (d.navigationVAlign == "center") {
            g.css({
                top: "50%",
                marginTop: d.navigationVOffset - Math.round(g.innerHeight() / 2) + "px"
            })
        }
        if (d.navigationVAlign == "bottom") {
            g.css({
                bottom: 0 + d.navigationVOffset + "px"
            })
        }
        if (d.navigationVAlign == "top") {
            g.css({
                top: 0 + d.navigationVOffset + "px"
            })
        }
        if (d.navigationHAlign == "center") {
            g.css({
                left: "50%",
                marginLeft: j + d.navigationHOffset - Math.round(g.innerWidth() / 2) + "px"
            })
        }
        if (d.navigationHAlign == "left") {
            g.css({
                left: 0 + d.navigationHOffset + j + "px"
            })
        }
        if (d.navigationHAlign == "right") {
            g.css({
                right: 0 + d.navigationHOffset - j + "px"
            })
        }
    };
    var a1 = function(k) {
        var b = k.container;
        k.beforli = k.next - 1;
        k.comingli = k.next + 1;
        if (k.beforli < 0) {
            k.beforli = k.slideamount - 1
        }
        if (k.comingli >= k.slideamount) {
            k.comingli = 0
        }
        var w = b.find(">ul:first-child >li:eq(" + k.comingli + ")"),
            F = b.find(">ul:first-child >li:eq(" + k.beforli + ")"),
            j = F.find(".defaultimg").attr("src"),
            E = w.find(".defaultimg").attr("src");
        if (k.arr == aJ) {
            k.arr = b.parent().find(".tparrows"), k.rar = b.parent().find(".tp-rightarrow"), k.lar = b.parent().find(".tp-leftarrow"), k.raimg = k.rar.find(".tp-arr-imgholder"), k.laimg = k.lar.find(".tp-arr-imgholder"), k.raimg_b = k.rar.find(".tp-arr-imgholder2"), k.laimg_b = k.lar.find(".tp-arr-imgholder2"), k.ratit = k.rar.find(".tp-arr-titleholder"), k.latit = k.lar.find(".tp-arr-titleholder")
        }
        var C = k.arr,
            z = k.rar,
            t = k.lar,
            B = k.raimg,
            x = k.laimg,
            e = k.raimg_b,
            A = k.laimg_b,
            D = k.ratit,
            q = k.latit;
        if (w.data("title") != aJ) {
            D.html(w.data("title"))
        }
        if (F.data("title") != aJ) {
            q.html(F.data("title"))
        }
        if (z.hasClass("itishovered")) {
            z.width(D.outerWidth(true) + parseInt(z.css("minWidth"), 0))
        }
        if (t.hasClass("itishovered")) {
            t.width(q.outerWidth(true) + parseInt(t.css("minWidth"), 0))
        }
        if (C.hasClass("preview2") && !C.hasClass("hashoveralready")) {
            C.addClass("hashoveralready");
            if (!aC()) {
                C.hover(function() {
                    var a = a0(this),
                        c = a.find(".tp-arr-titleholder");
                    a.width(c.outerWidth(true) + parseInt(a.css("minWidth"), 0));
                    a.addClass("itishovered")
                }, function() {
                    var a = a0(this),
                        c = a.find(".tp-arr-titleholder");
                    a.css({
                        width: parseInt(a.css("minWidth"), 0)
                    });
                    a.removeClass("itishovered")
                })
            } else {
                var C = a0(this),
                    y = C.find(".tp-arr-titleholder");
                y.addClass("alwayshidden");
                punchgs.TweenLite.set(y, {
                    autoAlpha: 0
                })
            }
        }
        if (F.data("thumb") != aJ) {
            j = F.data("thumb")
        }
        if (w.data("thumb") != aJ) {
            E = w.data("thumb")
        }
        if (!C.hasClass("preview4")) {
            punchgs.TweenLite.to(B, 0.5, {
                autoAlpha: 0,
                onComplete: function() {
                    B.css({
                        backgroundImage: "url(" + E + ")"
                    });
                    x.css({
                        backgroundImage: "url(" + j + ")"
                    })
                }
            });
            punchgs.TweenLite.to(x, 0.5, {
                autoAlpha: 0,
                onComplete: function() {
                    punchgs.TweenLite.to(B, 0.5, {
                        autoAlpha: 1,
                        delay: 0.2
                    });
                    punchgs.TweenLite.to(x, 0.5, {
                        autoAlpha: 1,
                        delay: 0.2
                    })
                }
            })
        } else {
            e.css({
                backgroundImage: "url(" + E + ")"
            });
            A.css({
                backgroundImage: "url(" + j + ")"
            });
            punchgs.TweenLite.fromTo(e, 0.8, {
                force3D: punchgs.force3d,
                x: 0
            }, {
                x: -B.width(),
                ease: punchgs.Power3.easeOut,
                delay: 1,
                onComplete: function() {
                    B.css({
                        backgroundImage: "url(" + E + ")"
                    });
                    punchgs.TweenLite.set(e, {
                        x: 0
                    })
                }
            });
            punchgs.TweenLite.fromTo(A, 0.8, {
                force3D: punchgs.force3d,
                x: 0
            }, {
                x: B.width(),
                ease: punchgs.Power3.easeOut,
                delay: 1,
                onComplete: function() {
                    x.css({
                        backgroundImage: "url(" + j + ")"
                    });
                    punchgs.TweenLite.set(A, {
                        x: 0
                    })
                }
            });
            punchgs.TweenLite.fromTo(B, 0.8, {
                x: 0
            }, {
                force3D: punchgs.force3d,
                x: -B.width(),
                ease: punchgs.Power3.easeOut,
                delay: 1,
                onComplete: function() {
                    punchgs.TweenLite.set(B, {
                        x: 0
                    })
                }
            });
            punchgs.TweenLite.fromTo(x, 0.8, {
                x: 0
            }, {
                force3D: punchgs.force3d,
                x: B.width(),
                ease: punchgs.Power3.easeOut,
                delay: 1,
                onComplete: function() {
                    punchgs.TweenLite.set(x, {
                        x: 0
                    })
                }
            })
        }
        if (z.hasClass("preview4") && !z.hasClass("hashoveralready")) {
            z.addClass("hashoveralready");
            z.hover(function() {
                var a = a0(this).find(".tp-arr-iwrapper");
                var c = a0(this).find(".tp-arr-allwrapper");
                punchgs.TweenLite.fromTo(a, 0.4, {
                    x: a.width()
                }, {
                    x: 0,
                    delay: 0.3,
                    ease: punchgs.Power3.easeOut,
                    overwrite: "all"
                });
                punchgs.TweenLite.to(c, 0.2, {
                    autoAlpha: 1,
                    overwrite: "all"
                })
            }, function() {
                var a = a0(this).find(".tp-arr-iwrapper");
                var c = a0(this).find(".tp-arr-allwrapper");
                punchgs.TweenLite.to(a, 0.4, {
                    x: a.width(),
                    ease: punchgs.Power3.easeOut,
                    delay: 0.2,
                    overwrite: "all"
                });
                punchgs.TweenLite.to(c, 0.2, {
                    delay: 0.6,
                    autoAlpha: 0,
                    overwrite: "all"
                })
            });
            t.hover(function() {
                var a = a0(this).find(".tp-arr-iwrapper");
                var c = a0(this).find(".tp-arr-allwrapper");
                punchgs.TweenLite.fromTo(a, 0.4, {
                    x: 0 - a.width()
                }, {
                    x: 0,
                    delay: 0.3,
                    ease: punchgs.Power3.easeOut,
                    overwrite: "all"
                });
                punchgs.TweenLite.to(c, 0.2, {
                    autoAlpha: 1,
                    overwrite: "all"
                })
            }, function() {
                var a = a0(this).find(".tp-arr-iwrapper");
                var c = a0(this).find(".tp-arr-allwrapper");
                punchgs.TweenLite.to(a, 0.4, {
                    x: 0 - a.width(),
                    ease: punchgs.Power3.easeOut,
                    delay: 0.2,
                    overwrite: "all"
                });
                punchgs.TweenLite.to(c, 0.2, {
                    delay: 0.6,
                    autoAlpha: 0,
                    overwrite: "all"
                })
            })
        }
    };
    var aH = function(f, d) {
        d.container.closest(".forcefullwidth_wrapper_tp_banner").find(".tp-fullwidth-forcer").css({
            height: d.container.height()
        });
        d.container.closest(".rev_slider_wrapper").css({
            height: d.container.height()
        });
        d.width = parseInt(d.container.width(), 0);
        d.height = parseInt(d.container.height(), 0);
        d.bw = d.width / d.startwidth;
        d.bh = d.height / d.startheight;
        if (d.bh > d.bw) {
            d.bh = d.bw
        }
        if (d.bh < d.bw) {
            d.bw = d.bh
        }
        if (d.bw < d.bh) {
            d.bh = d.bw
        }
        if (d.bh > 1) {
            d.bw = 1;
            d.bh = 1
        }
        if (d.bw > 1) {
            d.bw = 1;
            d.bh = 1
        }
        d.height = Math.round(d.startheight * (d.width / d.startwidth));
        if (d.height > d.startheight && d.autoHeight != "on") {
            d.height = d.startheight
        }
        if (d.fullScreen == "on") {
            d.height = d.bw * d.startheight;
            var b = d.container.parent().width();
            var c = a0(window).height();
            if (d.fullScreenOffsetContainer != aJ) {
                try {
                    var e = d.fullScreenOffsetContainer.split(",");
                    a0.each(e, function(g, h) {
                        c = c - a0(h).outerHeight(true);
                        if (c < d.minFullScreenHeight) {
                            c = d.minFullScreenHeight
                        }
                    })
                } catch (a) {}
                try {
                    if (d.fullScreenOffset.split("%").length > 1 && d.fullScreenOffset != aJ && d.fullScreenOffset.length > 0) {
                        c = c - a0(window).height() * parseInt(d.fullScreenOffset, 0) / 100
                    } else {
                        if (d.fullScreenOffset != aJ && d.fullScreenOffset.length > 0) {
                            c = c - parseInt(d.fullScreenOffset, 0)
                        }
                    }
                    if (c < d.minFullScreenHeight) {
                        c = d.minFullScreenHeight
                    }
                } catch (a) {}
            }
            d.container.parent().height(c);
            d.container.closest(".rev_slider_wrapper").height(c);
            d.container.css({
                height: "100%"
            });
            d.height = c
        } else {
            d.container.height(d.height)
        }
        d.slotw = Math.ceil(d.width / d.slots);
        if (d.fullScreen == "on") {
            d.sloth = Math.ceil(a0(window).height() / d.slots)
        } else {
            d.sloth = Math.ceil(d.height / d.slots)
        }
        if (d.autoHeight == "on") {
            d.sloth = Math.ceil(f.height() / d.slots)
        }
    };
    var aR = function(b, a) {
        b.find(".tp-caption").each(function() {
            a0(this).addClass(a0(this).data("transition"));
            a0(this).addClass("start")
        });
        b.find(">ul:first").css({
            overflow: "hidden",
            width: "100%",
            height: "100%",
            maxHeight: b.parent().css("maxHeight")
        });
        if (a.autoHeight == "on") {
            b.find(">ul:first").css({
                overflow: "hidden",
                width: "100%",
                height: "100%",
                maxHeight: "none"
            });
            b.css({
                maxHeight: "none"
            });
            b.parent().css({
                maxHeight: "none"
            })
        }
        b.find(">ul:first >li").each(function(h) {
            var f = a0(this);
            f.css({
                width: "100%",
                height: "100%",
                overflow: "hidden"
            });
            if (f.data("link") != aJ) {
                var d = f.data("link");
                var e = "_self";
                var g = 60;
                if (f.data("slideindex") == "back") {
                    g = 0
                }
                var c = f.data("linktoslide");
                if (f.data("target") != aJ) {
                    e = f.data("target")
                }
                if (d == "slide") {
                    f.append('<div class="tp-caption sft slidelink" style="width:100%;height:100%;z-index:' + g + ';" data-x="center" data-y="center" data-linktoslide="' + c + '" data-start="0"><a style="width:100%;height:100%;display:block"><span style="width:100%;height:100%;display:block"></span></a></div>')
                } else {
                    c = "no";
                    f.append('<div class="tp-caption sft slidelink" style="width:100%;height:100%;z-index:' + g + ';" data-x="center" data-y="center" data-linktoslide="' + c + '" data-start="0"><a style="width:100%;height:100%;display:block" target="' + e + '" href="' + d + '"><span style="width:100%;height:100%;display:block"></span></a></div>')
                }
            }
        });
        b.parent().css({
            overflow: "visible"
        });
        b.find(">ul:first >li >img").each(function(o) {
            var h = a0(this);
            h.addClass("defaultimg");
            if (h.data("lazyload") != aJ && h.data("lazydone") != 1) {} else {
                aH(h, a)
            }
            h.wrap('<div class="slotholder" style="width:100%;height:100%;"data-duration="' + h.data("duration") + '"data-zoomstart="' + h.data("zoomstart") + '"data-zoomend="' + h.data("zoomend") + '"data-rotationstart="' + h.data("rotationstart") + '"data-rotationend="' + h.data("rotationend") + '"data-ease="' + h.data("ease") + '"data-duration="' + h.data("duration") + '"data-bgpositionend="' + h.data("bgpositionend") + '"data-bgposition="' + h.data("bgposition") + '"data-duration="' + h.data("duration") + '"data-kenburns="' + h.data("kenburns") + '"data-easeme="' + h.data("ease") + '"data-bgfit="' + h.data("bgfit") + '"data-bgfitend="' + h.data("bgfitend") + '"data-owidth="' + h.data("owidth") + '"data-oheight="' + h.data("oheight") + '"></div>');
            if (a.dottedOverlay != "none" && a.dottedOverlay != aJ) {
                h.closest(".slotholder").append('<div class="tp-dottedoverlay ' + a.dottedOverlay + '"></div>')
            }
            var j = h.attr("src"),
                g = h.data("lazyload"),
                e = h.data("bgfit"),
                k = h.data("bgrepeat"),
                d = h.data("bgposition");
            if (e == aJ) {
                e = "cover"
            }
            if (k == aJ) {
                k = "no-repeat"
            }
            if (d == aJ) {
                d = "center center"
            }
            var m = h.closest(".slotholder");
            h.replaceWith('<div class="tp-bgimg defaultimg" data-lazyload="' + h.data("lazyload") + '" data-bgfit="' + e + '"data-bgposition="' + d + '" data-bgrepeat="' + k + '" data-lazydone="' + h.data("lazydone") + '" src="' + j + '" data-src="' + j + '" style="background-color:' + h.css("backgroundColor") + ";background-repeat:" + k + ";background-image:url(" + j + ");background-size:" + e + ";background-position:" + d + ';width:100%;height:100%;"></div>');
            if (aP(8)) {
                m.find(".tp-bgimg").css({
                    backgroundImage: "none",
                    "background-image": "none"
                });
                m.find(".tp-bgimg").append('<img class="ieeightfallbackimage defaultimg" src="' + j + '" style="width:100%">')
            }
            h.css({
                opacity: 0
            });
            h.data("li-id", o)
        })
    };
    var aX = function(H, z, v, C) {
        var t = H,
            o = t.find(".defaultimg"),
            K = t.data("zoomstart"),
            G = t.data("rotationstart");
        if (o.data("currotate") != aJ) {
            G = o.data("currotate")
        }
        if (o.data("curscale") != aJ) {
            K = o.data("curscale")
        }
        aH(o, z);
        var B = o.data("src"),
            J = o.css("background-color"),
            D = z.width,
            x = z.height,
            I = o.data("fxof");
        if (z.autoHeight == "on") {
            x = z.container.height()
        }
        if (I == aJ) {
            I = 0
        }
        fullyoff = 0;
        var A = 0,
            F = o.data("bgfit"),
            j = o.data("bgrepeat"),
            k = o.data("bgposition");
        if (F == aJ) {
            F = "cover"
        }
        if (j == aJ) {
            j = "no-repeat"
        }
        if (k == aJ) {
            k = "center center"
        }
        if (aP(8)) {
            t.data("kenburns", "off");
            var q = B;
            B = ""
        }
        if (t.data("kenburns") == "on") {
            F = K;
            if (F.toString().length < 4) {
                F = aq(F, t, z)
            }
        }
        if (C == "horizontal") {
            if (!v) {
                var A = 0 - z.slotw
            }
            for (var b = 0; b < z.slots; b++) {
                t.append('<div class="slot" style="position:absolute;top:' + (0 + fullyoff) + "px;left:" + (I + b * z.slotw) + "px;overflow:hidden;width:" + (z.slotw + 0.6) + "px;height:" + x + 'px"><div class="slotslide" style="position:absolute;top:0px;left:' + A + "px;width:" + (z.slotw + 0.6) + "px;height:" + x + 'px;overflow:hidden;"><div style="background-color:' + J + ";position:absolute;top:0px;left:" + (0 - b * z.slotw) + "px;width:" + D + "px;height:" + x + "px;background-image:url(" + B + ");background-repeat:" + j + ";background-size:" + F + ";background-position:" + k + ';"></div></div></div>');
                if (K != aJ && G != aJ) {
                    punchgs.TweenLite.set(t.find(".slot").last(), {
                        rotationZ: G
                    })
                }
                if (aP(8)) {
                    t.find(".slot ").last().find(".slotslide").append('<img class="ieeightfallbackimage" src="' + q + '" style="width:100%;height:auto">');
                    a3(t, z)
                }
            }
        } else {
            if (!v) {
                var A = 0 - z.sloth
            }
            for (var b = 0; b < z.slots + 2; b++) {
                t.append('<div class="slot" style="position:absolute;top:' + (fullyoff + b * z.sloth) + "px;left:" + I + "px;overflow:hidden;width:" + D + "px;height:" + z.sloth + 'px"><div class="slotslide" style="position:absolute;top:' + A + "px;left:0px;width:" + D + "px;height:" + z.sloth + 'px;overflow:hidden;"><div style="background-color:' + J + ";position:absolute;top:" + (0 - b * z.sloth) + "px;left:0px;width:" + D + "px;height:" + x + "px;background-image:url(" + B + ");background-repeat:" + j + ";background-size:" + F + ";background-position:" + k + ';"></div></div></div>');
                if (K != aJ && G != aJ) {
                    punchgs.TweenLite.set(t.find(".slot").last(), {
                        rotationZ: G
                    })
                }
                if (aP(8)) {
                    t.find(".slot ").last().find(".slotslide").append('<img class="ieeightfallbackimage" src="' + q + '" style="width:100%;height:auto;">');
                    a3(t, z)
                }
            }
        }
    };
    var aE = function(L, D, B) {
        var H = L;
        var A = H.find(".defaultimg");
        var v = H.data("zoomstart");
        var P = H.data("rotationstart");
        if (A.data("currotate") != aJ) {
            P = A.data("currotate")
        }
        if (A.data("curscale") != aJ) {
            v = A.data("curscale") * 100
        }
        aH(A, D);
        var K = A.data("src");
        var G = A.css("backgroundColor");
        var O = D.width;
        var I = D.height;
        if (D.autoHeight == "on") {
            I = D.container.height()
        }
        var C = A.data("fxof");
        if (C == aJ) {
            C = 0
        }
        fullyoff = 0;
        var M = 0;
        if (aP(8)) {
            var F = K;
            K = ""
        }
        var J = 0;
        if (D.sloth > D.slotw) {
            J = D.sloth
        } else {
            J = D.slotw
        }
        if (!B) {
            var M = 0 - J
        }
        D.slotw = J;
        D.sloth = J;
        var o = 0;
        var t = 0;
        var z = A.data("bgfit");
        var j = A.data("bgrepeat");
        var q = A.data("bgposition");
        if (z == aJ) {
            z = "cover"
        }
        if (j == aJ) {
            j = "no-repeat"
        }
        if (q == aJ) {
            q = "center center"
        }
        if (H.data("kenburns") == "on") {
            z = v;
            if (z.toString().length < 4) {
                z = aq(z, H, D)
            }
        }
        for (var b = 0; b < D.slots; b++) {
            t = 0;
            for (var k = 0; k < D.slots; k++) {
                H.append('<div class="slot" style="position:absolute;top:' + (fullyoff + t) + "px;left:" + (C + o) + "px;width:" + J + "px;height:" + J + 'px;overflow:hidden;"><div class="slotslide" data-x="' + o + '" data-y="' + t + '" style="position:absolute;top:' + 0 + "px;left:" + 0 + "px;width:" + J + "px;height:" + J + 'px;overflow:hidden;"><div style="position:absolute;top:' + (0 - t) + "px;left:" + (0 - o) + "px;width:" + O + "px;height:" + I + "px;background-color:" + G + ";background-image:url(" + K + ");background-repeat:" + j + ";background-size:" + z + ";background-position:" + q + ';"></div></div></div>');
                t = t + J;
                if (aP(8)) {
                    H.find(".slot ").last().find(".slotslide").append('<img src="' + F + '">');
                    a3(H, D)
                }
                if (v != aJ && P != aJ) {
                    punchgs.TweenLite.set(H.find(".slot").last(), {
                        rotationZ: P
                    })
                }
            }
            o = o + J
        }
    };
    var a3 = function(d, b) {
        if (aP(8)) {
            var f = d.find(".ieeightfallbackimage");
            var c = f.width(),
                a = f.height();
            if (b.startwidth / b.startheight < d.data("owidth") / d.data("oheight")) {
                f.css({
                    width: "auto",
                    height: "100%"
                })
            } else {
                f.css({
                    width: "100%",
                    height: "auto"
                })
            }
            setTimeout(function() {
                var g = f.width(),
                    e = f.height();
                if (d.data("bgposition") == "center center") {
                    f.css({
                        position: "absolute",
                        top: b.height / 2 - e / 2 + "px",
                        left: b.width / 2 - g / 2 + "px"
                    })
                }
                if (d.data("bgposition") == "center top" || d.data("bgposition") == "top center") {
                    f.css({
                        position: "absolute",
                        top: "0px",
                        left: b.width / 2 - g / 2 + "px"
                    })
                }
                if (d.data("bgposition") == "center bottom" || d.data("bgposition") == "bottom center") {
                    f.css({
                        position: "absolute",
                        bottom: "0px",
                        left: b.width / 2 - g / 2 + "px"
                    })
                }
                if (d.data("bgposition") == "right top" || d.data("bgposition") == "top right") {
                    f.css({
                        position: "absolute",
                        top: "0px",
                        right: "0px"
                    })
                }
                if (d.data("bgposition") == "right bottom" || d.data("bgposition") == "bottom right") {
                    f.css({
                        position: "absolute",
                        bottom: "0px",
                        right: "0px"
                    })
                }
                if (d.data("bgposition") == "right center" || d.data("bgposition") == "center right") {
                    f.css({
                        position: "absolute",
                        top: b.height / 2 - e / 2 + "px",
                        right: "0px"
                    })
                }
                if (d.data("bgposition") == "left bottom" || d.data("bgposition") == "bottom left") {
                    f.css({
                        position: "absolute",
                        bottom: "0px",
                        left: "0px"
                    })
                }
                if (d.data("bgposition") == "left center" || d.data("bgposition") == "center left") {
                    f.css({
                        position: "absolute",
                        top: b.height / 2 - e / 2 + "px",
                        left: "0px"
                    })
                }
            }, 20)
        }
    };
    var aG = function(a, c, b) {
        b.find(".slot").each(function() {
            a0(this).remove()
        });
        c.transition = 0
    };
    var aw = function(b, a) {
        b.find("img, .defaultimg").each(function(e) {
            var c = a0(this);
            if (c.data("lazyload") != c.attr("src") && a < 3 && c.data("lazyload") != aJ && c.data("lazyload") != "undefined") {
                if (c.data("lazyload") != aJ && c.data("lazyload") != "undefined") {
                    c.attr("src", c.data("lazyload"));
                    var d = new Image;
                    d.onload = function(f) {
                        c.data("lazydone", 1);
                        if (c.hasClass("defaultimg")) {
                            ah(c, d)
                        }
                    };
                    d.error = function() {
                        c.data("lazydone", 1)
                    };
                    d.src = c.attr("src");
                    if (d.complete) {
                        if (c.hasClass("defaultimg")) {
                            ah(c, d)
                        }
                        c.data("lazydone", 1)
                    }
                }
            } else {
                if ((c.data("lazyload") === aJ || c.data("lazyload") === "undefined") && c.data("lazydone") != 1) {
                    var d = new Image;
                    d.onload = function() {
                        if (c.hasClass("defaultimg")) {
                            ah(c, d)
                        }
                        c.data("lazydone", 1)
                    };
                    d.error = function() {
                        c.data("lazydone", 1)
                    };
                    if (c.attr("src") != aJ && c.attr("src") != "undefined") {
                        d.src = c.attr("src")
                    } else {
                        d.src = c.data("src")
                    }
                    if (d.complete) {
                        if (c.hasClass("defaultimg")) {
                            ah(c, d)
                        }
                        c.data("lazydone", 1)
                    }
                }
            }
        })
    };
    var ah = function(d, b) {
        var f = d.closest("li");
        var c = b.width;
        var a = b.height;
        f.data("owidth", c);
        f.data("oheight", a);
        f.find(".slotholder").data("owidth", c);
        f.find(".slotholder").data("oheight", a);
        f.data("loadeddone", 1)
    };
    var aF = function(d, c, a) {
        aw(d, 0);
        var b = setInterval(function() {
            a.bannertimeronpause = true;
            a.container.trigger("stoptimer");
            a.cd = 0;
            var e = 0;
            d.find("img, .defaultimg").each(function(f) {
                if (a0(this).data("lazydone") != 1) {
                    e++
                }
            });
            if (e > 0) {
                aw(d, e)
            } else {
                clearInterval(b);
                if (c != aJ) {
                    c()
                }
            }
        }, 100)
    };
    var ag = function(f, g) {
        try {
            var d = f.find(">ul:first-child >li:eq(" + g.act + ")")
        } catch (b) {
            var d = f.find(">ul:first-child >li:eq(1)")
        }
        g.lastslide = g.act;
        var c = f.find(">ul:first-child >li:eq(" + g.next + ")");
        var a = c.find(".defaultimg");
        g.bannertimeronpause = true;
        f.trigger("stoptimer");
        g.cd = 0;
        if (a.data("lazyload") != aJ && a.data("lazyload") != "undefined" && a.data("lazydone") != 1) {
            if (!aP(8)) {
                a.css({
                    backgroundImage: 'url("' + c.find(".defaultimg").data("lazyload") + '")'
                })
            } else {
                a.attr("src", c.find(".defaultimg").data("lazyload"))
            }
            a.data("src", c.find(".defaultimg").data("lazyload"));
            a.data("lazydone", 1);
            a.data("orgw", 0);
            c.data("loadeddone", 1);
            f.find(".tp-loader").css({
                display: "block"
            });
            aF(f.find(".tp-static-layers"), function() {
                aF(c, function() {
                    var e = c.find(".slotholder");
                    if (e.data("kenburns") == "on") {
                        var h = setInterval(function() {
                            var j = e.data("owidth");
                            if (j >= 0) {
                                clearInterval(h);
                                am(g, a, f)
                            }
                        }, 10)
                    } else {
                        am(g, a, f)
                    }
                }, g)
            }, g)
        } else {
            if (c.data("loadeddone") === aJ) {
                c.data("loadeddone", 1);
                aF(c, function() {
                    am(g, a, f)
                }, g)
            } else {
                am(g, a, f)
            }
        }
    };
    var am = function(b, a, c) {
        b.bannertimeronpause = false;
        b.cd = 0;
        c.trigger("nulltimer");
        c.find(".tp-loader").css({
            display: "none"
        });
        aH(a, b);
        aO(c, b);
        aH(a, b);
        ay(c, b)
    };
    var ay = function(h, k) {
        h.trigger("revolution.slide.onbeforeswap");
        k.transition = 1;
        k.videoplaying = false;
        try {
            var g = h.find(">ul:first-child >li:eq(" + k.act + ")")
        } catch (d) {
            var g = h.find(">ul:first-child >li:eq(1)")
        }
        k.lastslide = k.act;
        var f = h.find(">ul:first-child >li:eq(" + k.next + ")");
        setTimeout(function() {
            a1(k)
        }, 200);
        var j = g.find(".slotholder");
        var c = f.find(".slotholder");
        if (c.data("kenburns") == "on" || j.data("kenburns") == "on") {
            ab(h, k);
            h.find(".kenburnimg").remove()
        }
        if (f.data("delay") != aJ) {
            k.cd = 0;
            k.delay = f.data("delay")
        } else {
            k.delay = k.origcd
        }
        if (k.firststart == 1) {
            punchgs.TweenLite.set(g, {
                autoAlpha: 0
            })
        }
        punchgs.TweenLite.set(g, {
            zIndex: 18
        });
        punchgs.TweenLite.set(f, {
            autoAlpha: 0,
            zIndex: 20
        });
        var b = 0;
        if (g.index() != f.index() && k.firststart != 1) {
            b = af(g, k)
        }
        if (g.data("saveperformance") != "on") {
            b = 0
        }
        setTimeout(function() {
            h.trigger("restarttimer");
            aT(h, k, f, g, j, c)
        }, b)
    };
    var aT = function(bI, bE, bO, bD, bC, bV) {
        function K() {
            a0.each(bS, function(b, a) {
                if (a[0] == bP || a[8] == bP) {
                    bR = a[1];
                    bG = a[2];
                    bU = bA
                }
                bA = bA + 1
            })
        }
        if (bO.data("differentissplayed") == "prepared") {
            bO.data("differentissplayed", "done");
            bO.data("transition", bO.data("savedtransition"));
            bO.data("slotamount", bO.data("savedslotamount"));
            bO.data("masterspeed", bO.data("savedmasterspeed"))
        }
        if (bO.data("fstransition") != aJ && bO.data("differentissplayed") != "done") {
            bO.data("savedtransition", bO.data("transition"));
            bO.data("savedslotamount", bO.data("slotamount"));
            bO.data("savedmasterspeed", bO.data("masterspeed"));
            bO.data("transition", bO.data("fstransition"));
            bO.data("slotamount", bO.data("fsslotamount"));
            bO.data("masterspeed", bO.data("fsmasterspeed"));
            bO.data("differentissplayed", "prepared")
        }
        var bR = 0,
            bK = bO.data("transition").split(","),
            bT = bO.data("nexttransid");
        if (bT == aJ) {
            bT = 0;
            bO.data("nexttransid", bT)
        } else {
            bT = bT + 1;
            if (bT == bK.length) {
                bT = 0
            }
            bO.data("nexttransid", bT)
        }
        var bP = bK[bT];
        if (bE.ie) {
            if (bP == "boxfade") {
                bP = "boxslide"
            }
            if (bP == "slotfade-vertical") {
                bP = "slotzoom-vertical"
            }
            if (bP == "slotfade-horizontal") {
                bP = "slotzoom-horizontal"
            }
        }
        if (aP(8)) {
            bP = 11
        }
        var bG = 0;
        if (bE.parallax == "scroll" && bE.parallaxFirstGo == aJ) {
            bE.parallaxFirstGo = true;
            aN(bI, bE);
            setTimeout(function() {
                aN(bI, bE)
            }, 210);
            setTimeout(function() {
                aN(bI, bE)
            }, 420)
        }
        if (bP == "boxslide" || bP == "boxfade" || bP == "papercut" || bP == 0 || bP == 1 || bP == 16) {
            bP = 9
        }
        if (bP == "slidehorizontal") {
            bP = "slideleft";
            if (bE.leftarrowpressed == 1) {
                bP = "slideright"
            }
        }
        if (bP == "slidevertical") {
            bP = "slideup";
            if (bE.leftarrowpressed == 1) {
                bP = "slidedown"
            }
        }
        if (bP == "parallaxhorizontal") {
            bP = "parallaxtoleft";
            if (bE.leftarrowpressed == 1) {
                bP = "parallaxtoright"
            }
        }
        if (bP == "parallaxvertical") {
            bP = "parallaxtotop";
            if (bE.leftarrowpressed == 1) {
                bP = "parallaxtobottom"
            }
        }
        var bS = [
            ["boxslide", 0, 1, 10, 0, "box", false, null, 0],
            ["boxfade", 1, 0, 10, 0, "box", false, null, 1],
            ["slotslide-horizontal", 2, 0, 0, 200, "horizontal", true, false, 2],
            ["slotslide-vertical", 3, 0, 0, 200, "vertical", true, false, 3],
            ["curtain-1", 4, 3, 0, 0, "horizontal", true, true, 4],
            ["curtain-2", 5, 3, 0, 0, "horizontal", true, true, 5],
            ["curtain-3", 6, 3, 25, 0, "horizontal", true, true, 6],
            ["slotzoom-horizontal", 7, 0, 0, 400, "horizontal", true, true, 7],
            ["slotzoom-vertical", 8, 0, 0, 0, "vertical", true, true, 8],
            ["slotfade-horizontal", 9, 0, 0, 500, "horizontal", true, null, 9],
            ["slotfade-vertical", 10, 0, 0, 500, "vertical", true, null, 10],
            ["fade", 11, 0, 1, 300, "horizontal", true, null, 11],
            ["slideleft", 12, 0, 1, 0, "horizontal", true, true, 12],
            ["slideup", 13, 0, 1, 0, "horizontal", true, true, 13],
            ["slidedown", 14, 0, 1, 0, "horizontal", true, true, 14],
            ["slideright", 15, 0, 1, 0, "horizontal", true, true, 15],
            ["papercut", 16, 0, 0, 600, "", null, null, 16],
            ["3dcurtain-horizontal", 17, 0, 20, 100, "vertical", false, true, 17],
            ["3dcurtain-vertical", 18, 0, 10, 100, "horizontal", false, true, 18],
            ["cubic", 19, 0, 20, 600, "horizontal", false, true, 19],
            ["cube", 19, 0, 20, 600, "horizontal", false, true, 20],
            ["flyin", 20, 0, 4, 600, "vertical", false, true, 21],
            ["turnoff", 21, 0, 1, 1600, "horizontal", false, true, 22],
            ["incube", 22, 0, 20, 200, "horizontal", false, true, 23],
            ["cubic-horizontal", 23, 0, 20, 500, "vertical", false, true, 24],
            ["cube-horizontal", 23, 0, 20, 500, "vertical", false, true, 25],
            ["incube-horizontal", 24, 0, 20, 500, "vertical", false, true, 26],
            ["turnoff-vertical", 25, 0, 1, 200, "horizontal", false, true, 27],
            ["fadefromright", 12, 1, 1, 0, "horizontal", true, true, 28],
            ["fadefromleft", 15, 1, 1, 0, "horizontal", true, true, 29],
            ["fadefromtop", 14, 1, 1, 0, "horizontal", true, true, 30],
            ["fadefrombottom", 13, 1, 1, 0, "horizontal", true, true, 31],
            ["fadetoleftfadefromright", 12, 2, 1, 0, "horizontal", true, true, 32],
            ["fadetorightfadetoleft", 15, 2, 1, 0, "horizontal", true, true, 33],
            ["fadetobottomfadefromtop", 14, 2, 1, 0, "horizontal", true, true, 34],
            ["fadetotopfadefrombottom", 13, 2, 1, 0, "horizontal", true, true, 35],
            ["parallaxtoright", 12, 3, 1, 0, "horizontal", true, true, 36],
            ["parallaxtoleft", 15, 3, 1, 0, "horizontal", true, true, 37],
            ["parallaxtotop", 14, 3, 1, 0, "horizontal", true, true, 38],
            ["parallaxtobottom", 13, 3, 1, 0, "horizontal", true, true, 39],
            ["scaledownfromright", 12, 4, 1, 0, "horizontal", true, true, 40],
            ["scaledownfromleft", 15, 4, 1, 0, "horizontal", true, true, 41],
            ["scaledownfromtop", 14, 4, 1, 0, "horizontal", true, true, 42],
            ["scaledownfrombottom", 13, 4, 1, 0, "horizontal", true, true, 43],
            ["zoomout", 13, 5, 1, 0, "horizontal", true, true, 44],
            ["zoomin", 13, 6, 1, 0, "horizontal", true, true, 45],
            ["notransition", 26, 0, 1, 0, "horizontal", true, null, 46]
        ];
        var bB = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45];
        var bJ = [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27];
        var bR = 0;
        var bG = 1;
        var bU = 0;
        var bA = 0;
        var bm = new Array;
        if (bV.data("kenburns") == "on") {
            if (bP == "boxslide" || bP == 0 || bP == "boxfade" || bP == 1 || bP == "papercut" || bP == 16) {
                bP = 11
            }
            ap(bI, bE, true, true)
        }
        if (bP == "random") {
            bP = Math.round(Math.random() * bS.length - 1);
            if (bP > bS.length - 1) {
                bP = bS.length - 1
            }
        }
        if (bP == "random-static") {
            bP = Math.round(Math.random() * bB.length - 1);
            if (bP > bB.length - 1) {
                bP = bB.length - 1
            }
            bP = bB[bP]
        }
        if (bP == "random-premium") {
            bP = Math.round(Math.random() * bJ.length - 1);
            if (bP > bJ.length - 1) {
                bP = bJ.length - 1
            }
            bP = bJ[bP]
        }
        var a6 = [12, 13, 14, 15, 16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45];
        if (bE.isJoomla == true && window.MooTools != aJ && a6.indexOf(bP) != -1) {
            var bz = Math.round(Math.random() * (bJ.length - 2)) + 1;
            if (bz > bJ.length - 1) {
                bz = bJ.length - 1
            }
            if (bz == 0) {
                bz = 1
            }
            bP = bJ[bz]
        }
        K();
        if (aP(8) && bR > 15 && bR < 28) {
            bP = Math.round(Math.random() * bB.length - 1);
            if (bP > bB.length - 1) {
                bP = bB.length - 1
            }
            bP = bB[bP];
            bA = 0;
            K()
        }
        var bc = -1;
        if (bE.leftarrowpressed == 1 || bE.act > bE.next) {
            bc = 1
        }
        bE.leftarrowpressed = 0;
        if (bR > 26) {
            bR = 26
        }
        if (bR < 0) {
            bR = 0
        }
        var bo = 300;
        if (bO.data("masterspeed") != aJ && bO.data("masterspeed") > 99 && bO.data("masterspeed") < 4001) {
            bo = bO.data("masterspeed")
        }
        bm = bS[bU];
        bI.parent().find(".bullet").each(function() {
            var a = a0(this);
            a.removeClass("selected");
            if (bE.navigationArrows == "withbullet" || bE.navigationArrows == "nexttobullets") {
                if (a.index() - 1 == bE.next) {
                    a.addClass("selected")
                }
            } else {
                if (a.index() == bE.next) {
                    a.addClass("selected")
                }
            }
        });
        var bL = new punchgs.TimelineLite({
            onComplete: function() {
                ao(bI, bE, bV, bC, bO, bD, bL)
            }
        });
        bL.add(punchgs.TweenLite.set(bV.find(".defaultimg"), {
            opacity: 0
        }));
        bL.pause();
        if (bO.data("slotamount") == aJ || bO.data("slotamount") < 1) {
            bE.slots = Math.round(Math.random() * 12 + 4);
            if (bP == "boxslide") {
                bE.slots = Math.round(Math.random() * 6 + 3)
            } else {
                if (bP == "flyin") {
                    bE.slots = Math.round(Math.random() * 4 + 1)
                }
            }
        } else {
            bE.slots = bO.data("slotamount")
        }
        if (bO.data("rotate") == aJ) {
            bE.rotate = 0
        } else {
            if (bO.data("rotate") == 999) {
                bE.rotate = Math.round(Math.random() * 360)
            } else {
                bE.rotate = bO.data("rotate")
            }
        }
        if (!a0.support.transition || bE.ie || bE.ie9) {
            bE.rotate = 0
        }
        if (bE.firststart == 1) {
            bE.firststart = 0
        }
        bo = bo + bm[4];
        if ((bR == 4 || bR == 5 || bR == 6) && bE.slots < 3) {
            bE.slots = 3
        }
        if (bm[3] != 0) {
            bE.slots = Math.min(bE.slots, bm[3])
        }
        if (bR == 9) {
            bE.slots = bE.width / 20
        }
        if (bR == 10) {
            bE.slots = bE.height / 20
        }
        if (bm[5] == "box") {
            if (bm[7] != null) {
                aE(bC, bE, bm[7])
            }
            if (bm[6] != null) {
                aE(bV, bE, bm[6])
            }
        } else {
            if (bm[5] == "vertical" || bm[5] == "horizontal") {
                if (bm[7] != null) {
                    aX(bC, bE, bm[7], bm[5])
                }
                if (bm[6] != null) {
                    aX(bV, bE, bm[6], bm[5])
                }
            }
        }
        if (bR == 0) {
            var bp = Math.ceil(bE.height / bE.sloth);
            var bb = 0;
            bV.find(".slotslide").each(function(a) {
                var b = a0(this);
                bb = bb + 1;
                if (bb == bp) {
                    bb = 0
                }
                bL.add(punchgs.TweenLite.from(b, bo / 600, {
                    opacity: 0,
                    top: 0 - bE.sloth,
                    left: 0 - bE.slotw,
                    rotation: bE.rotate,
                    force3D: "auto",
                    ease: punchgs.Power2.easeOut
                }), (a * 15 + bb * 30) / 1500)
            })
        }
        if (bR == 1) {
            var bd, bW = 0;
            bV.find(".slotslide").each(function(a) {
                var b = a0(this);
                rand = Math.random() * bo + 300;
                rand2 = Math.random() * 500 + 200;
                if (rand + rand2 > bd) {
                    bd = rand2 + rand2;
                    bW = a
                }
                bL.add(punchgs.TweenLite.from(b, rand / 1000, {
                    autoAlpha: 0,
                    force3D: "auto",
                    rotation: bE.rotate,
                    ease: punchgs.Power2.easeInOut
                }), rand2 / 1000)
            })
        }
        if (bR == 2) {
            var bn = new punchgs.TimelineLite;
            bC.find(".slotslide").each(function() {
                var a = a0(this);
                bn.add(punchgs.TweenLite.to(a, bo / 1000, {
                    left: bE.slotw,
                    force3D: "auto",
                    rotation: 0 - bE.rotate
                }), 0);
                bL.add(bn, 0)
            });
            bV.find(".slotslide").each(function() {
                var a = a0(this);
                bn.add(punchgs.TweenLite.from(a, bo / 1000, {
                    left: 0 - bE.slotw,
                    force3D: "auto",
                    rotation: bE.rotate
                }), 0);
                bL.add(bn, 0)
            })
        }
        if (bR == 3) {
            var bn = new punchgs.TimelineLite;
            bC.find(".slotslide").each(function() {
                var a = a0(this);
                bn.add(punchgs.TweenLite.to(a, bo / 1000, {
                    top: bE.sloth,
                    rotation: bE.rotate,
                    force3D: "auto",
                    transformPerspective: 600
                }), 0);
                bL.add(bn, 0)
            });
            bV.find(".slotslide").each(function() {
                var a = a0(this);
                bn.add(punchgs.TweenLite.from(a, bo / 1000, {
                    top: 0 - bE.sloth,
                    rotation: bE.rotate,
                    ease: punchgs.Power2.easeOut,
                    force3D: "auto",
                    transformPerspective: 600
                }), 0);
                bL.add(bn, 0)
            })
        }
        if (bR == 4 || bR == 5) {
            setTimeout(function() {
                bC.find(".defaultimg").css({
                    opacity: 0
                })
            }, 100);
            var ba = bo / 1000,
                bh = ba,
                bn = new punchgs.TimelineLite;
            bC.find(".slotslide").each(function(b) {
                var c = a0(this);
                var a = b * ba / bE.slots;
                if (bR == 5) {
                    a = (bE.slots - b - 1) * ba / bE.slots / 1.5
                }
                bn.add(punchgs.TweenLite.to(c, ba * 3, {
                    transformPerspective: 600,
                    force3D: "auto",
                    top: 0 + bE.height,
                    opacity: 0.5,
                    rotation: bE.rotate,
                    ease: punchgs.Power2.easeInOut,
                    delay: a
                }), 0);
                bL.add(bn, 0)
            });
            bV.find(".slotslide").each(function(b) {
                var c = a0(this);
                var a = b * ba / bE.slots;
                if (bR == 5) {
                    a = (bE.slots - b - 1) * ba / bE.slots / 1.5
                }
                bn.add(punchgs.TweenLite.from(c, ba * 3, {
                    top: 0 - bE.height,
                    opacity: 0.5,
                    rotation: bE.rotate,
                    force3D: "auto",
                    ease: punchgs.Power2.easeInOut,
                    delay: a
                }), 0);
                bL.add(bn, 0)
            })
        }
        if (bR == 6) {
            if (bE.slots < 2) {
                bE.slots = 2
            }
            if (bE.slots % 2) {
                bE.slots = bE.slots + 1
            }
            var bn = new punchgs.TimelineLite;
            setTimeout(function() {
                bC.find(".defaultimg").css({
                    opacity: 0
                })
            }, 100);
            bC.find(".slotslide").each(function(b) {
                var c = a0(this);
                if (b + 1 < bE.slots / 2) {
                    var a = (b + 2) * 90
                } else {
                    var a = (2 + bE.slots - b) * 90
                }
                bn.add(punchgs.TweenLite.to(c, (bo + a) / 1000, {
                    top: 0 + bE.height,
                    opacity: 1,
                    force3D: "auto",
                    rotation: bE.rotate,
                    ease: punchgs.Power2.easeInOut
                }), 0);
                bL.add(bn, 0)
            });
            bV.find(".slotslide").each(function(b) {
                var c = a0(this);
                if (b + 1 < bE.slots / 2) {
                    var a = (b + 2) * 90
                } else {
                    var a = (2 + bE.slots - b) * 90
                }
                bn.add(punchgs.TweenLite.from(c, (bo + a) / 1000, {
                    top: 0 - bE.height,
                    opacity: 1,
                    force3D: "auto",
                    rotation: bE.rotate,
                    ease: punchgs.Power2.easeInOut
                }), 0);
                bL.add(bn, 0)
            })
        }
        if (bR == 7) {
            bo = bo * 2;
            var bn = new punchgs.TimelineLite;
            setTimeout(function() {
                bC.find(".defaultimg").css({
                    opacity: 0
                })
            }, 100);
            bC.find(".slotslide").each(function() {
                var a = a0(this).find("div");
                bn.add(punchgs.TweenLite.to(a, bo / 1000, {
                    left: 0 - bE.slotw / 2 + "px",
                    top: 0 - bE.height / 2 + "px",
                    width: bE.slotw * 2 + "px",
                    height: bE.height * 2 + "px",
                    opacity: 0,
                    rotation: bE.rotate,
                    force3D: "auto",
                    ease: punchgs.Power2.easeOut
                }), 0);
                bL.add(bn, 0)
            });
            bV.find(".slotslide").each(function(a) {
                var b = a0(this).find("div");
                bn.add(punchgs.TweenLite.fromTo(b, bo / 1000, {
                    left: 0,
                    top: 0,
                    opacity: 0,
                    transformPerspective: 600
                }, {
                    left: 0 - a * bE.slotw + "px",
                    ease: punchgs.Power2.easeOut,
                    force3D: "auto",
                    top: 0 + "px",
                    width: bE.width,
                    height: bE.height,
                    opacity: 1,
                    rotation: 0,
                    delay: 0.1
                }), 0);
                bL.add(bn, 0)
            })
        }
        if (bR == 8) {
            bo = bo * 3;
            var bn = new punchgs.TimelineLite;
            bC.find(".slotslide").each(function() {
                var a = a0(this).find("div");
                bn.add(punchgs.TweenLite.to(a, bo / 1000, {
                    left: 0 - bE.width / 2 + "px",
                    top: 0 - bE.sloth / 2 + "px",
                    width: bE.width * 2 + "px",
                    height: bE.sloth * 2 + "px",
                    force3D: "auto",
                    opacity: 0,
                    rotation: bE.rotate
                }), 0);
                bL.add(bn, 0)
            });
            bV.find(".slotslide").each(function(a) {
                var b = a0(this).find("div");
                bn.add(punchgs.TweenLite.fromTo(b, bo / 1000, {
                    left: 0,
                    top: 0,
                    opacity: 0,
                    force3D: "auto"
                }, {
                    left: 0 + "px",
                    top: 0 - a * bE.sloth + "px",
                    width: bV.find(".defaultimg").data("neww") + "px",
                    height: bV.find(".defaultimg").data("newh") + "px",
                    opacity: 1,
                    rotation: 0
                }), 0);
                bL.add(bn, 0)
            })
        }
        if (bR == 9 || bR == 10) {
            var bN = 0;
            bV.find(".slotslide").each(function(a) {
                var b = a0(this);
                bN++;
                bL.add(punchgs.TweenLite.fromTo(b, bo / 1000, {
                    autoAlpha: 0,
                    force3D: "auto",
                    transformPerspective: 600
                }, {
                    autoAlpha: 1,
                    ease: punchgs.Power2.easeInOut,
                    delay: a * 5 / 1000
                }), 0)
            })
        }
        if (bR == 11 || bR == 26) {
            var bN = 0;
            if (bR == 26) {
                bo = 0
            }
            bV.find(".slotslide").each(function(a) {
                var b = a0(this);
                bL.add(punchgs.TweenLite.from(b, bo / 1000, {
                    autoAlpha: 0,
                    force3D: "auto",
                    ease: punchgs.Power2.easeInOut
                }), 0)
            })
        }
        if (bR == 12 || bR == 13 || bR == 14 || bR == 15) {
            bo = 1000;
            setTimeout(function() {
                punchgs.TweenLite.set(bC.find(".defaultimg"), {
                    autoAlpha: 0
                })
            }, 100);
            var bk = bE.width;
            var bg = bE.height;
            var bF = bV.find(".slotslide");
            if (bE.fullWidth == "on" || bE.fullScreen == "on") {
                bk = bF.width();
                bg = bF.height()
            }
            var a7 = 0;
            var B = 0;
            if (bR == 12) {
                a7 = bk
            } else {
                if (bR == 15) {
                    a7 = 0 - bk
                } else {
                    if (bR == 13) {
                        B = bg
                    } else {
                        if (bR == 14) {
                            B = 0 - bg
                        }
                    }
                }
            }
            var by = 1;
            var t = 1;
            var o = 1;
            var y = punchgs.Power2.easeInOut;
            var bx = punchgs.Power2.easeInOut;
            var be = bo / 1000;
            var a9 = be;
            if (bG == 1) {
                by = 0
            }
            if (bG == 2) {
                by = 0
            }
            if (bG == 3) {
                y = punchgs.Power2.easeInOut;
                bx = punchgs.Power1.easeInOut;
                be = bo / 1200
            }
            if (bG == 4 || bG == 5) {
                t = 0.6
            }
            if (bG == 6) {
                t = 1.4
            }
            if (bG == 5 || bG == 6) {
                o = 1.4;
                by = 0;
                bk = 0;
                bg = 0;
                a7 = 0;
                B = 0
            }
            if (bG == 6) {
                o = 0.6
            }
            var bj = 0;
            bL.add(punchgs.TweenLite.from(bF, be, {
                left: a7,
                top: B,
                scale: o,
                opacity: by,
                rotation: bE.rotate,
                ease: bx,
                force3D: "auto"
            }), 0);
            var g = bC.find(".slotslide");
            if (bG == 4 || bG == 5) {
                bk = 0;
                bg = 0
            }
            if (bG != 1) {
                if (bR == 12) {
                    bL.add(punchgs.TweenLite.to(g, a9, {
                        left: 0 - bk + "px",
                        force3D: "auto",
                        scale: t,
                        opacity: by,
                        rotation: bE.rotate,
                        ease: y
                    }), 0)
                } else {
                    if (bR == 15) {
                        bL.add(punchgs.TweenLite.to(g, a9, {
                            left: bk + "px",
                            force3D: "auto",
                            scale: t,
                            opacity: by,
                            rotation: bE.rotate,
                            ease: y
                        }), 0)
                    } else {
                        if (bR == 13) {
                            bL.add(punchgs.TweenLite.to(g, a9, {
                                top: 0 - bg + "px",
                                force3D: "auto",
                                scale: t,
                                opacity: by,
                                rotation: bE.rotate,
                                ease: y
                            }), 0)
                        } else {
                            if (bR == 14) {
                                bL.add(punchgs.TweenLite.to(g, a9, {
                                    top: bg + "px",
                                    orce3D: "auto",
                                    scale: t,
                                    opacity: by,
                                    rotation: bE.rotate,
                                    ease: y
                                }), 0)
                            }
                        }
                    }
                }
            }
        }
        if (bR == 16) {
            var bn = new punchgs.TimelineLite;
            bL.add(punchgs.TweenLite.set(bD, {
                position: "absolute",
                "z-index": 20
            }), 0);
            bL.add(punchgs.TweenLite.set(bO, {
                position: "absolute",
                "z-index": 15
            }), 0);
            bD.wrapInner('<div class="tp-half-one" style="position:relative; width:100%;height:100%"></div>');
            bD.find(".tp-half-one").clone(true).appendTo(bD).addClass("tp-half-two");
            bD.find(".tp-half-two").removeClass("tp-half-one");
            var bk = bE.width;
            var bg = bE.height;
            if (bE.autoHeight == "on") {
                bg = bI.height()
            }
            bD.find(".tp-half-one .defaultimg").wrap('<div class="tp-papercut" style="width:' + bk + "px;height:" + bg + 'px;"></div>');
            bD.find(".tp-half-two .defaultimg").wrap('<div class="tp-papercut" style="width:' + bk + "px;height:" + bg + 'px;"></div>');
            bD.find(".tp-half-two .defaultimg").css({
                position: "absolute",
                top: "-50%"
            });
            bD.find(".tp-half-two .tp-caption").wrapAll('<div style="position:absolute;top:-50%;left:0px;"></div>');
            bL.add(punchgs.TweenLite.set(bD.find(".tp-half-two"), {
                width: bk,
                height: bg,
                overflow: "hidden",
                zIndex: 15,
                position: "absolute",
                top: bg / 2,
                left: "0px",
                transformPerspective: 600,
                transformOrigin: "center bottom"
            }), 0);
            bL.add(punchgs.TweenLite.set(bD.find(".tp-half-one"), {
                width: bk,
                height: bg / 2,
                overflow: "visible",
                zIndex: 10,
                position: "absolute",
                top: "0px",
                left: "0px",
                transformPerspective: 600,
                transformOrigin: "center top"
            }), 0);
            var e = bD.find(".defaultimg");
            var bQ = Math.round(Math.random() * 20 - 10),
                bM = Math.round(Math.random() * 20 - 10),
                bv = Math.round(Math.random() * 20 - 10),
                bs = Math.random() * 0.4 - 0.2,
                bi = Math.random() * 0.4 - 0.2,
                bu = Math.random() * 1 + 1,
                bw = Math.random() * 1 + 1,
                L = Math.random() * 0.3 + 0.3;
            bL.add(punchgs.TweenLite.set(bD.find(".tp-half-one"), {
                overflow: "hidden"
            }), 0);
            bL.add(punchgs.TweenLite.fromTo(bD.find(".tp-half-one"), bo / 800, {
                width: bk,
                height: bg / 2,
                position: "absolute",
                top: "0px",
                left: "0px",
                force3D: "auto",
                transformOrigin: "center top"
            }, {
                scale: bu,
                rotation: bQ,
                y: 0 - bg - bg / 4,
                autoAlpha: 0,
                ease: punchgs.Power2.easeInOut
            }), 0);
            bL.add(punchgs.TweenLite.fromTo(bD.find(".tp-half-two"), bo / 800, {
                width: bk,
                height: bg,
                overflow: "hidden",
                position: "absolute",
                top: bg / 2,
                left: "0px",
                force3D: "auto",
                transformOrigin: "center bottom"
            }, {
                scale: bw,
                rotation: bM,
                y: bg + bg / 4,
                ease: punchgs.Power2.easeInOut,
                autoAlpha: 0,
                onComplete: function() {
                    punchgs.TweenLite.set(bD, {
                        position: "absolute",
                        "z-index": 15
                    });
                    punchgs.TweenLite.set(bO, {
                        position: "absolute",
                        "z-index": 20
                    });
                    if (bD.find(".tp-half-one").length > 0) {
                        bD.find(".tp-half-one .defaultimg").unwrap();
                        bD.find(".tp-half-one .slotholder").unwrap()
                    }
                    bD.find(".tp-half-two").remove()
                }
            }), 0);
            bn.add(punchgs.TweenLite.set(bV.find(".defaultimg"), {
                autoAlpha: 1
            }), 0);
            if (bD.html() != null) {
                bL.add(punchgs.TweenLite.fromTo(bO, (bo - 200) / 1000, {
                    scale: L,
                    x: bE.width / 4 * bs,
                    y: bg / 4 * bi,
                    rotation: bv,
                    force3D: "auto",
                    transformOrigin: "center center",
                    ease: punchgs.Power2.easeOut
                }, {
                    autoAlpha: 1,
                    scale: 1,
                    x: 0,
                    y: 0,
                    rotation: 0
                }), 0)
            }
            bL.add(bn, 0)
        }
        if (bR == 17) {
            bV.find(".slotslide").each(function(a) {
                var b = a0(this);
                bL.add(punchgs.TweenLite.fromTo(b, bo / 800, {
                    opacity: 0,
                    rotationY: 0,
                    scale: 0.9,
                    rotationX: -110,
                    force3D: "auto",
                    transformPerspective: 600,
                    transformOrigin: "center center"
                }, {
                    opacity: 1,
                    top: 0,
                    left: 0,
                    scale: 1,
                    rotation: 0,
                    rotationX: 0,
                    force3D: "auto",
                    rotationY: 0,
                    ease: punchgs.Power3.easeOut,
                    delay: a * 0.06
                }), 0)
            })
        }
        if (bR == 18) {
            bV.find(".slotslide").each(function(a) {
                var b = a0(this);
                bL.add(punchgs.TweenLite.fromTo(b, bo / 500, {
                    autoAlpha: 0,
                    rotationY: 310,
                    scale: 0.9,
                    rotationX: 10,
                    force3D: "auto",
                    transformPerspective: 600,
                    transformOrigin: "center center"
                }, {
                    autoAlpha: 1,
                    top: 0,
                    left: 0,
                    scale: 1,
                    rotation: 0,
                    rotationX: 0,
                    force3D: "auto",
                    rotationY: 0,
                    ease: punchgs.Power3.easeOut,
                    delay: a * 0.06
                }), 0)
            })
        }
        if (bR == 19 || bR == 22) {
            var bn = new punchgs.TimelineLite;
            bL.add(punchgs.TweenLite.set(bD, {
                zIndex: 20
            }), 0);
            bL.add(punchgs.TweenLite.set(bO, {
                zIndex: 20
            }), 0);
            setTimeout(function() {
                bC.find(".defaultimg").css({
                    opacity: 0
                })
            }, 100);
            var br = bO.css("z-index"),
                bt = bD.css("z-index"),
                bq = 90,
                by = 1;
            if (bc == 1) {
                bq = -90
            }
            if (bR == 19) {
                var bH = "center center -" + bE.height / 2;
                by = 0
            } else {
                var bH = "center center " + bE.height / 2
            }
            punchgs.TweenLite.set(bI, {
                transformStyle: "flat",
                backfaceVisibility: "hidden",
                transformPerspective: 600
            });
            bV.find(".slotslide").each(function(a) {
                var b = a0(this);
                bn.add(punchgs.TweenLite.fromTo(b, bo / 1000, {
                    transformStyle: "flat",
                    backfaceVisibility: "hidden",
                    left: 0,
                    rotationY: bE.rotate,
                    z: 10,
                    top: 0,
                    scale: 1,
                    force3D: "auto",
                    transformPerspective: 600,
                    transformOrigin: bH,
                    rotationX: bq
                }, {
                    left: 0,
                    rotationY: 0,
                    top: 0,
                    z: 0,
                    scale: 1,
                    force3D: "auto",
                    rotationX: 0,
                    delay: a * 50 / 1000,
                    ease: punchgs.Power2.easeInOut
                }), 0);
                bn.add(punchgs.TweenLite.to(b, 0.1, {
                    autoAlpha: 1,
                    delay: a * 50 / 1000
                }), 0);
                bL.add(bn)
            });
            bC.find(".slotslide").each(function(b) {
                var c = a0(this);
                var a = -90;
                if (bc == 1) {
                    a = 90
                }
                bn.add(punchgs.TweenLite.fromTo(c, bo / 1000, {
                    transformStyle: "flat",
                    backfaceVisibility: "hidden",
                    autoAlpha: 1,
                    rotationY: 0,
                    top: 0,
                    z: 0,
                    scale: 1,
                    force3D: "auto",
                    transformPerspective: 600,
                    transformOrigin: bH,
                    rotationX: 0
                }, {
                    autoAlpha: 1,
                    rotationY: bE.rotate,
                    top: 0,
                    z: 10,
                    scale: 1,
                    rotationX: a,
                    delay: b * 50 / 1000,
                    force3D: "auto",
                    ease: punchgs.Power2.easeInOut
                }), 0);
                bL.add(bn)
            })
        }
        if (bR == 20) {
            setTimeout(function() {
                bC.find(".defaultimg").css({
                    opacity: 0
                })
            }, 100);
            var br = bO.css("z-index");
            var bt = bD.css("z-index");
            if (bc == 1) {
                var bf = -bE.width;
                var bq = 70;
                var bH = "left center -" + bE.height / 2
            } else {
                var bf = bE.width;
                var bq = -70;
                var bH = "right center -" + bE.height / 2
            }
            bV.find(".slotslide").each(function(a) {
                var b = a0(this);
                bL.add(punchgs.TweenLite.fromTo(b, bo / 1500, {
                    left: bf,
                    rotationX: 40,
                    z: -600,
                    opacity: by,
                    top: 0,
                    force3D: "auto",
                    transformPerspective: 600,
                    transformOrigin: bH,
                    rotationY: bq
                }, {
                    left: 0,
                    delay: a * 50 / 1000,
                    ease: punchgs.Power2.easeInOut
                }), 0);
                bL.add(punchgs.TweenLite.fromTo(b, bo / 1000, {
                    rotationX: 40,
                    z: -600,
                    opacity: by,
                    top: 0,
                    scale: 1,
                    force3D: "auto",
                    transformPerspective: 600,
                    transformOrigin: bH,
                    rotationY: bq
                }, {
                    rotationX: 0,
                    opacity: 1,
                    top: 0,
                    z: 0,
                    scale: 1,
                    rotationY: 0,
                    delay: a * 50 / 1000,
                    ease: punchgs.Power2.easeInOut
                }), 0);
                bL.add(punchgs.TweenLite.to(b, 0.1, {
                    opacity: 1,
                    force3D: "auto",
                    delay: a * 50 / 1000 + bo / 2000
                }), 0)
            });
            bC.find(".slotslide").each(function(b) {
                var f = a0(this);
                if (bc != 1) {
                    var a = -bE.width;
                    var c = 70;
                    var d = "left center -" + bE.height / 2
                } else {
                    var a = bE.width;
                    var c = -70;
                    var d = "right center -" + bE.height / 2
                }
                bL.add(punchgs.TweenLite.fromTo(f, bo / 1000, {
                    opacity: 1,
                    rotationX: 0,
                    top: 0,
                    z: 0,
                    scale: 1,
                    left: 0,
                    force3D: "auto",
                    transformPerspective: 600,
                    transformOrigin: d,
                    rotationY: 0
                }, {
                    opacity: 1,
                    rotationX: 40,
                    top: 0,
                    z: -600,
                    left: a,
                    force3D: "auto",
                    scale: 0.8,
                    rotationY: c,
                    delay: b * 50 / 1000,
                    ease: punchgs.Power2.easeInOut
                }), 0);
                bL.add(punchgs.TweenLite.to(f, 0.1, {
                    force3D: "auto",
                    opacity: 0,
                    delay: b * 50 / 1000 + (bo / 1000 - bo / 10000)
                }), 0)
            })
        }
        if (bR == 21 || bR == 25) {
            setTimeout(function() {
                bC.find(".defaultimg").css({
                    opacity: 0
                })
            }, 100);
            var br = bO.css("z-index");
            var bt = bD.css("z-index");
            if (bc == 1) {
                var bf = -bE.width;
                var bq = 90;
                if (bR == 25) {
                    var bH = "center top 0";
                    rot2 = -bq;
                    bq = bE.rotate
                } else {
                    var bH = "left center 0";
                    rot2 = bE.rotate
                }
            } else {
                var bf = bE.width;
                var bq = -90;
                if (bR == 25) {
                    var bH = "center bottom 0";
                    rot2 = -bq;
                    bq = bE.rotate
                } else {
                    var bH = "right center 0";
                    rot2 = bE.rotate
                }
            }
            bV.find(".slotslide").each(function(a) {
                var b = a0(this);
                bL.add(punchgs.TweenLite.fromTo(b, bo / 1000, {
                    left: 0,
                    transformStyle: "flat",
                    rotationX: rot2,
                    z: 0,
                    autoAlpha: 0,
                    top: 0,
                    scale: 1,
                    force3D: "auto",
                    transformPerspective: 600,
                    transformOrigin: bH,
                    rotationY: bq
                }, {
                    left: 0,
                    rotationX: 0,
                    top: 0,
                    z: 0,
                    autoAlpha: 1,
                    scale: 1,
                    rotationY: 0,
                    force3D: "auto",
                    ease: punchgs.Power3.easeInOut
                }), 0)
            });
            if (bc != 1) {
                var bf = -bE.width;
                var bq = 90;
                if (bR == 25) {
                    var bH = "center top 0";
                    rot2 = -bq;
                    bq = bE.rotate
                } else {
                    var bH = "left center 0";
                    rot2 = bE.rotate
                }
            } else {
                var bf = bE.width;
                var bq = -90;
                if (bR == 25) {
                    var bH = "center bottom 0";
                    rot2 = -bq;
                    bq = bE.rotate
                } else {
                    var bH = "right center 0";
                    rot2 = bE.rotate
                }
            }
            bC.find(".slotslide").each(function(a) {
                var b = a0(this);
                bL.add(punchgs.TweenLite.fromTo(b, bo / 1000, {
                    left: 0,
                    transformStyle: "flat",
                    rotationX: 0,
                    z: 0,
                    autoAlpha: 1,
                    top: 0,
                    scale: 1,
                    force3D: "auto",
                    transformPerspective: 600,
                    transformOrigin: bH,
                    rotationY: 0
                }, {
                    left: 0,
                    rotationX: rot2,
                    top: 0,
                    z: 0,
                    autoAlpha: 1,
                    force3D: "auto",
                    scale: 1,
                    rotationY: bq,
                    ease: punchgs.Power1.easeInOut
                }), 0)
            })
        }
        if (bR == 23 || bR == 24) {
            setTimeout(function() {
                bC.find(".defaultimg").css({
                    opacity: 0
                })
            }, 100);
            var br = bO.css("z-index");
            var bt = bD.css("z-index");
            var bq = -90;
            if (bc == 1) {
                bq = 90
            }
            var by = 1;
            if (bR == 23) {
                var bH = "center center -" + bE.width / 2;
                by = 0
            } else {
                var bH = "center center " + bE.width / 2
            }
            var a8 = 0;
            punchgs.TweenLite.set(bI, {
                transformStyle: "preserve-3d",
                backfaceVisibility: "hidden",
                perspective: 2500
            });
            bV.find(".slotslide").each(function(a) {
                var b = a0(this);
                bL.add(punchgs.TweenLite.fromTo(b, bo / 1000, {
                    left: a8,
                    rotationX: bE.rotate,
                    force3D: "auto",
                    opacity: by,
                    top: 0,
                    scale: 1,
                    transformPerspective: 600,
                    transformOrigin: bH,
                    rotationY: bq
                }, {
                    left: 0,
                    rotationX: 0,
                    autoAlpha: 1,
                    top: 0,
                    z: 0,
                    scale: 1,
                    rotationY: 0,
                    delay: a * 50 / 500,
                    ease: punchgs.Power2.easeInOut
                }), 0)
            });
            bq = 90;
            if (bc == 1) {
                bq = -90
            }
            bC.find(".slotslide").each(function(a) {
                var b = a0(this);
                bL.add(punchgs.TweenLite.fromTo(b, bo / 1000, {
                    left: 0,
                    autoAlpha: 1,
                    rotationX: 0,
                    top: 0,
                    z: 0,
                    scale: 1,
                    force3D: "auto",
                    transformPerspective: 600,
                    transformOrigin: bH,
                    rotationY: 0
                }, {
                    left: a8,
                    autoAlpha: 1,
                    rotationX: bE.rotate,
                    top: 0,
                    scale: 1,
                    rotationY: bq,
                    delay: a * 50 / 500,
                    ease: punchgs.Power2.easeInOut
                }), 0)
            })
        }
        bL.pause();
        az(bO, bE, null, bL);
        punchgs.TweenLite.to(bO, 0.001, {
            autoAlpha: 1
        });
        var bl = {};
        bl.slideIndex = bE.next + 1;
        bl.slide = bO;
        bI.trigger("revolution.slide.onchange", bl);
        setTimeout(function() {
            bI.trigger("revolution.slide.onafterswap")
        }, bo);
        bI.trigger("revolution.slide.onvideostop")
    };
    var ao = function(f, b, h, d, a, c, g) {
        punchgs.TweenLite.to(h.find(".defaultimg"), 0.001, {
            autoAlpha: 1,
            onComplete: function() {
                aG(f, b, a)
            }
        });
        if (a.index() != c.index()) {
            punchgs.TweenLite.to(c, 0.2, {
                autoAlpha: 0,
                onComplete: function() {
                    aG(f, b, c)
                }
            })
        }
        b.act = b.next;
        if (b.navigationType == "thumb") {
            aU(f)
        }
        if (h.data("kenburns") == "on") {
            ap(f, b)
        }
        f.find(".current-sr-slide-visible").removeClass("current-sr-slide-visible");
        a.addClass("current-sr-slide-visible");
        if (b.parallax == "scroll" || b.parallax == "scroll+mouse" || b.parallax == "mouse+scroll") {
            aN(f, b)
        }
        g.clear()
    };
    var aA = function(c) {
        var g = c.target.getVideoEmbedCode();
        var e = a0("#" + g.split('id="')[1].split('"')[0]);
        var b = e.closest(".tp-simpleresponsive");
        var d = e.parent().data("player");
        if (c.data == YT.PlayerState.PLAYING) {
            var f = b.find(".tp-bannertimer");
            var a = f.data("opt");
            if (e.closest(".tp-caption").data("volume") == "mute") {
                d.mute()
            }
            a.videoplaying = true;
            b.trigger("stoptimer");
            b.trigger("revolution.slide.onvideoplay")
        } else {
            var f = b.find(".tp-bannertimer");
            var a = f.data("opt");
            if (c.data != -1) {
                a.videoplaying = false;
                b.trigger("playtimer");
                b.trigger("revolution.slide.onvideostop")
            }
        }
        if (c.data == 0 && a.nextslideatend == true) {
            a.container.revnext()
        }
    };
    var al = function(b, a, c) {
        if (b.addEventListener) {
            b.addEventListener(a, c, false)
        } else {
            b.attachEvent(a, c, false)
        }
    };
    var an = function(b, e) {
        var d = $f(b);
        var a = a0("#" + b);
        var c = a.closest(".tp-simpleresponsive");
        d.addEvent("ready", function(f) {
            if (e) {
                d.api("play")
            }
            d.addEvent("play", function(h) {
                var g = c.find(".tp-bannertimer");
                var j = g.data("opt");
                j.videoplaying = true;
                c.trigger("stoptimer");
                if (a.closest(".tp-caption").data("volume") == "mute") {
                    d.api("setVolume", "0")
                }
            });
            d.addEvent("finish", function(h) {
                var g = c.find(".tp-bannertimer");
                var j = g.data("opt");
                j.videoplaying = false;
                c.trigger("playtimer");
                c.trigger("revolution.slide.onvideoplay");
                if (j.nextslideatend == true) {
                    j.container.revnext()
                }
            });
            d.addEvent("pause", function(h) {
                var g = c.find(".tp-bannertimer");
                var j = g.data("opt");
                j.videoplaying = false;
                c.trigger("playtimer");
                c.trigger("revolution.slide.onvideostop")
            })
        })
    };
    var a5 = function(f, h) {
        var d = h.width();
        var b = h.height();
        var c = f.data("mediaAspect");
        if (c == aJ) {
            c = 1
        }
        var g = d / b;
        f.css({
            position: "absolute"
        });
        var a = f.find("video");
        if (g < c) {
            f.width(b * c).height(b);
            punchgs.TweenLite.to(f, 0.01, {
                force3D: "auto",
                top: 0,
                left: 0 - (b * c - d) / 2,
                height: b
            })
        } else {
            f.width(d).height(d / c);
            punchgs.TweenLite.to(f, 0.01, {
                force3D: "auto",
                top: 0 - (d / c - b) / 2,
                left: 0,
                height: d / c
            })
        }
    };
    var ax = function() {
        var a = new Object;
        a.x = 0;
        a.y = 0;
        a.rotationX = 0;
        a.rotationY = 0;
        a.rotationZ = 0;
        a.scale = 1;
        a.scaleX = 1;
        a.scaleY = 1;
        a.skewX = 0;
        a.skewY = 0;
        a.opacity = 0;
        a.transformOrigin = "center, center";
        a.transformPerspective = 400;
        a.rotation = 0;
        return a
    };
    var ak = function(a, c) {
        var b = c.split(";");
        a0.each(b, function(g, h) {
            h = h.split(":");
            var f = h[0],
                d = h[1];
            if (f == "rotationX") {
                a.rotationX = parseInt(d, 0)
            }
            if (f == "rotationY") {
                a.rotationY = parseInt(d, 0)
            }
            if (f == "rotationZ") {
                a.rotationZ = parseInt(d, 0)
            }
            if (f == "rotationZ") {
                a.rotation = parseInt(d, 0)
            }
            if (f == "scaleX") {
                a.scaleX = parseFloat(d)
            }
            if (f == "scaleY") {
                a.scaleY = parseFloat(d)
            }
            if (f == "opacity") {
                a.opacity = parseFloat(d)
            }
            if (f == "skewX") {
                a.skewX = parseInt(d, 0)
            }
            if (f == "skewY") {
                a.skewY = parseInt(d, 0)
            }
            if (f == "x") {
                a.x = parseInt(d, 0)
            }
            if (f == "y") {
                a.y = parseInt(d, 0)
            }
            if (f == "z") {
                a.z = parseInt(d, 0)
            }
            if (f == "transformOrigin") {
                a.transformOrigin = d.toString()
            }
            if (f == "transformPerspective") {
                a.transformPerspective = parseInt(d, 0)
            }
        });
        return a
    };
    var at = function(b) {
        var d = b.split("animation:");
        var c = new Object;
        c.animation = ak(ax(), d[1]);
        var a = d[0].split(";");
        a0.each(a, function(h, g) {
            g = g.split(":");
            var j = g[0],
                f = g[1];
            if (j == "typ") {
                c.typ = f
            }
            if (j == "speed") {
                c.speed = parseInt(f, 0) / 1000
            }
            if (j == "start") {
                c.start = parseInt(f, 0) / 1000
            }
            if (j == "elementdelay") {
                c.elementdelay = parseFloat(f)
            }
            if (j == "ease") {
                c.ease = f
            }
        });
        return c
    };
    var az = function(e, b, h, q) {
        if (e.data("ctl") == aJ) {
            e.data("ctl", new punchgs.TimelineLite)
        }
        var d = e.data("ctl"),
            p = 0,
            m = 0,
            j = e.find(".tp-caption"),
            g = b.container.find(".tp-static-layers").find(".tp-caption");
        d.pause();
        a0.each(g, function(c, a) {
            j.push(a)
        });
        j.each(function(bq) {
            var bm = h,
                bp = -1,
                by = a0(this);
            if (by.hasClass("tp-static-layer")) {
                if (by.data("startslide") == -1 || by.data("startslide") == "-1") {
                    by.data("startslide", 0)
                }
                if (by.data("endslide") == -1 || by.data("endslide") == "-1") {
                    by.data("endslide", b.slideamount)
                }
                if (!by.hasClass("tp-is-shown")) {
                    if (by.data("startslide") <= b.next && by.data("endslide") >= b.next || by.data("startslide") == b.next || by.data("endslide") == b.next) {
                        by.addClass("tp-is-shown");
                        bp = 1
                    } else {
                        bp = 0
                    }
                } else {
                    if (by.data("endslide") == b.next || by.data("startslide") > b.next || by.data("endslide") < b.next) {
                        bp = 2
                    } else {
                        bp = 0
                    }
                }
            }
            p = b.width / 2 - b.startwidth * b.bw / 2;
            var bs = b.bw;
            var bA = b.bh;
            if (b.fullScreen == "on") {
                m = b.height / 2 - b.startheight * b.bh / 2
            }
            if (b.autoHeight == "on") {
                m = b.container.height() / 2 - b.startheight * b.bh / 2
            }
            if (m < 0) {
                m = 0
            }
            var bv = 0;
            if (b.width < b.hideCaptionAtLimit && by.data("captionhidden") == "on") {
                by.addClass("tp-hidden-caption");
                bv = 1
            } else {
                if (b.width < b.hideAllCaptionAtLimit || b.width < b.hideAllCaptionAtLilmit) {
                    by.addClass("tp-hidden-caption");
                    bv = 1
                } else {
                    by.removeClass("tp-hidden-caption")
                }
            }
            if (bv == 0) {
                if (by.data("linktoslide") != aJ && !by.hasClass("hasclicklistener")) {
                    by.addClass("hasclicklistener");
                    by.css({
                        cursor: "pointer"
                    });
                    if (by.data("linktoslide") != "no") {
                        by.click(function() {
                            var c = a0(this);
                            var f = c.data("linktoslide");
                            if (f != "next" && f != "prev") {
                                b.container.data("showus", f);
                                b.container.parent().find(".tp-rightarrow").click()
                            } else {
                                if (f == "next") {
                                    b.container.parent().find(".tp-rightarrow").click()
                                } else {
                                    if (f == "prev") {
                                        b.container.parent().find(".tp-leftarrow").click()
                                    }
                                }
                            }
                        })
                    }
                }
                if (p < 0) {
                    p = 0
                }
                var bo = "iframe" + Math.round(Math.random() * 1000 + 1);
                if (by.find("iframe").length > 0 || by.find("video").length > 0) {
                    var bz = false;
                    if (by.data("autoplayonlyfirsttime") == true || by.data("autoplayonlyfirsttime") == "true" || by.data("autoplay") == true) {
                        by.data("autoplay", true);
                        bz = true
                    }
                    by.find("iframe").each(function() {
                        var s = a0(this);
                        if (aC()) {
                            var B = s.attr("src");
                            s.attr("src", "");
                            s.attr("src", B)
                        }
                        b.nextslideatend = by.data("nextslideatend");
                        if (by.data("thumbimage") != aJ && by.data("thumbimage").length > 2 && by.data("autoplay") != true && !bm) {
                            by.find(".tp-thumb-image").remove();
                            by.append('<div class="tp-thumb-image" style="cursor:pointer; position:absolute;top:0px;left:0px;width:100%;height:100%;background-image:url(' + by.data("thumbimage") + '); background-size:cover"></div>')
                        }
                        if (s.attr("src").toLowerCase().indexOf("youtube") >= 0) {
                            if (!s.hasClass("HasListener")) {
                                try {
                                    s.attr("id", bo);
                                    var f;
                                    var L = setInterval(function() {
                                        if (YT != aJ) {
                                            if (typeof YT.Player != aJ && typeof YT.Player != "undefined") {
                                                if (by.data("autoplay") == true || bz) {
                                                    f = new YT.Player(bo, {
                                                        events: {
                                                            onStateChange: aA,
                                                            onReady: function(c) {
                                                                c.target.playVideo()
                                                            }
                                                        }
                                                    })
                                                } else {
                                                    f = new YT.Player(bo, {
                                                        events: {
                                                            onStateChange: aA
                                                        }
                                                    })
                                                }
                                                s.addClass("HasListener");
                                                by.data("player", f);
                                                clearInterval(L)
                                            }
                                        }
                                    }, 100)
                                } catch (J) {}
                            } else {
                                if (by.data("autoplay") == true || bz) {
                                    var f = by.data("player");
                                    by.data("timerplay", setTimeout(function() {
                                        if (by.data("forcerewind") == "on") {
                                            f.seekTo(0)
                                        }
                                        f.playVideo()
                                    }, by.data("start")))
                                }
                            }
                            by.find(".tp-thumb-image").click(function() {
                                punchgs.TweenLite.to(a0(this), 0.3, {
                                    opacity: 0,
                                    force3D: "auto",
                                    ease: punchgs.Power3.easeInOut,
                                    onComplete: function() {
                                        by.find(".tp-thumb-image").remove()
                                    }
                                });
                                if (!aC()) {
                                    var c = by.data("player");
                                    c.playVideo()
                                }
                            })
                        } else {
                            if (s.attr("src").toLowerCase().indexOf("vimeo") >= 0) {
                                if (!s.hasClass("HasListener")) {
                                    s.addClass("HasListener");
                                    s.attr("id", bo);
                                    var x = s.attr("src");
                                    var F = {},
                                        C = x,
                                        K = /([^&=]+)=([^&]*)/g,
                                        w;
                                    while (w = K.exec(C)) {
                                        F[decodeURIComponent(w[1])] = decodeURIComponent(w[2])
                                    }
                                    if (F.player_id != aJ) {
                                        x = x.replace(F.player_id, bo)
                                    } else {
                                        x = x + "&player_id=" + bo
                                    }
                                    try {
                                        x = x.replace("api=0", "api=1")
                                    } catch (J) {}
                                    x = x + "&api=1";
                                    s.attr("src", x);
                                    var f = by.find("iframe")[0];
                                    var E = setInterval(function() {
                                        if ($f != aJ) {
                                            if (typeof $f(bo).api != aJ && typeof $f(bo).api != "undefined") {
                                                $f(f).addEvent("ready", function() {
                                                    an(bo, bz)
                                                });
                                                clearInterval(E)
                                            }
                                        }
                                    }, 100)
                                } else {
                                    if (by.data("autoplay") == true) {
                                        var s = by.find("iframe");
                                        var G = s.attr("id");
                                        var E = setInterval(function() {
                                            if ($f != aJ) {
                                                if (typeof $f(G).api != aJ && typeof $f(G).api != "undefined") {
                                                    var c = $f(G);
                                                    by.data("timerplay", setTimeout(function() {
                                                        if (by.data("forcerewind") == "on") {
                                                            c.api("seekTo", 0)
                                                        }
                                                        c.api("play")
                                                    }, by.data("start")));
                                                    clearInterval(E)
                                                }
                                            }
                                        }, 100)
                                    }
                                }
                                by.find(".tp-thumb-image").click(function() {
                                    punchgs.TweenLite.to(a0(this), 0.3, {
                                        opacity: 0,
                                        force3D: "auto",
                                        ease: punchgs.Power3.easeInOut,
                                        onComplete: function() {
                                            by.find(".tp-thumb-image").remove()
                                        }
                                    });
                                    var o = by.find("iframe");
                                    var l = o.attr("id");
                                    var c = setInterval(function() {
                                        if ($f != aJ) {
                                            if (typeof $f(l).api != aJ && typeof $f(l).api != "undefined") {
                                                var n = $f(l);
                                                n.api("play");
                                                clearInterval(c)
                                            }
                                        }
                                    }, 100)
                                })
                            }
                        }
                    });
                    if (by.find("video").length > 0) {
                        by.find("video").each(function(w) {
                            var f = a0(this);
                            var l = this;
                            if (!f.parent().hasClass("html5vid")) {
                                f.wrap('<div class="html5vid" style="position:relative;top:0px;left:0px;width:auto;height:auto"></div>')
                            }
                            var v = a0(this).parent();
                            if (l.addEventListener) {
                                l.addEventListener("loadedmetadata", function() {
                                    v.data("metaloaded", 1)
                                })
                            } else {
                                l.attachEvent("loadedmetadata", function() {
                                    v.data("metaloaded", 1)
                                })
                            }
                            if (!f.hasClass("HasListener")) {
                                f.addClass("HasListener");
                                l.addEventListener("play", function() {
                                    v.addClass("videoisplaying");
                                    v.find(".tp-poster").remove();
                                    if (by.data("volume") == "mute") {
                                        l.muted = true
                                    }
                                    b.container.trigger("revolution.slide.onvideoplay");
                                    b.videoplaying = true;
                                    b.container.trigger("stoptimer")
                                });
                                l.addEventListener("pause", function() {
                                    v.removeClass("videoisplaying");
                                    b.videoplaying = false;
                                    b.container.trigger("playtimer");
                                    b.container.trigger("revolution.slide.onvideostop")
                                });
                                l.addEventListener("ended", function() {
                                    v.removeClass("videoisplaying");
                                    b.videoplaying = false;
                                    b.container.trigger("playtimer");
                                    b.container.trigger("revolution.slide.onvideostop");
                                    if (b.nextslideatend == true) {
                                        b.container.revnext()
                                    }
                                })
                            }
                            if (f.attr("poster") != aJ && v.find(".tp-poster").length == 0) {
                                v.append('<div class="tp-poster" style="position:absolute;z-index:1;width:100%;height:100%;top:0px;left:0px;background:url(' + f.attr("poster") + '); background-position:center center;background-size:100%;background-repeat:no-repeat;"></div>')
                            }
                            if (f.attr("control") == aJ && v.find(".tp-video-play-button").length == 0) {
                                v.append('<div class="tp-video-play-button"><i class="revicon-right-dir"></i><div class="tp-revstop"></div></div>');
                                v.find(".tp-video-play-button").click(function() {
                                    if (v.hasClass("videoisplaying")) {
                                        l.pause()
                                    } else {
                                        l.play()
                                    }
                                })
                            }
                            if (f.attr("control") == aJ) {
                                v.find("video, .tp-poster").click(function() {
                                    if (v.hasClass("videoisplaying")) {
                                        l.pause()
                                    } else {
                                        l.play()
                                    }
                                })
                            }
                            if (by.data("forcecover") == 1) {
                                a5(v, b.container);
                                v.addClass("fullcoveredvideo");
                                by.addClass("fullcoveredvideo")
                            }
                            if (by.data("forcecover") == 1 || by.hasClass("fullscreenvideo")) {
                                v.css({
                                    width: "100%",
                                    height: "100%"
                                })
                            }
                            var c = false;
                            if (by.data("autoplayonlyfirsttime") == true || by.data("autoplayonlyfirsttime") == "true") {
                                c = true
                            }
                            clearInterval(v.data("interval"));
                            v.data("interval", setInterval(function() {
                                if (v.data("metaloaded") == 1 || l.duration != NaN) {
                                    clearInterval(v.data("interval"));
                                    if (by.data("dottedoverlay") != "none" && by.data("dottedoverlay") != aJ) {
                                        if (by.find(".tp-dottedoverlay").length != 1) {
                                            v.append('<div class="tp-dottedoverlay ' + by.data("dottedoverlay") + '"></div>')
                                        }
                                    }
                                    var x = 16 / 9;
                                    if (by.data("aspectratio") == "4:3") {
                                        x = 4 / 3
                                    }
                                    v.data("mediaAspect", x);
                                    if (v.closest(".tp-caption").data("forcecover") == 1) {
                                        a5(v, b.container);
                                        v.addClass("fullcoveredvideo")
                                    }
                                    f.css({
                                        display: "block"
                                    });
                                    b.nextslideatend = by.data("nextslideatend");
                                    if (by.data("autoplay") == true || c == true) {
                                        var s = a0("body").find("#" + b.container.attr("id")).find(".tp-bannertimer");
                                        setTimeout(function() {
                                            b.videoplaying = true;
                                            b.container.trigger("stoptimer")
                                        }, 200);
                                        if (by.data("forcerewind") == "on" && !v.hasClass("videoisplaying")) {
                                            if (l.currentTime > 0) {
                                                l.currentTime = 0
                                            }
                                        }
                                        if (by.data("volume") == "mute") {
                                            l.muted = true
                                        }
                                        v.data("timerplay", setTimeout(function() {
                                            if (by.data("forcerewind") == "on" && !v.hasClass("videoisplaying")) {
                                                if (l.currentTime > 0) {
                                                    l.currentTime = 0
                                                }
                                            }
                                            if (by.data("volume") == "mute") {
                                                l.muted = true
                                            }
                                            setTimeout(function() {
                                                l.play()
                                            }, 500)
                                        }, 10 + by.data("start")))
                                    }
                                    if (v.data("ww") == aJ) {
                                        v.data("ww", f.attr("width"))
                                    }
                                    if (v.data("hh") == aJ) {
                                        v.data("hh", f.attr("height"))
                                    }
                                    if (!by.hasClass("fullscreenvideo") && by.data("forcecover") == 1) {
                                        try {
                                            v.width(v.data("ww") * b.bw);
                                            v.height(v.data("hh") * b.bh)
                                        } catch (o) {}
                                    }
                                    clearInterval(v.data("interval"))
                                }
                            }), 100)
                        })
                    }
                    if (by.data("autoplay") == true) {
                        var bl = a0("body").find("#" + b.container.attr("id")).find(".tp-bannertimer");
                        setTimeout(function() {
                            b.videoplaying = true;
                            b.container.trigger("stoptimer")
                        }, 200);
                        b.videoplaying = true;
                        b.container.trigger("stoptimer");
                        if (by.data("autoplayonlyfirsttime") == true || by.data("autoplayonlyfirsttime") == "true") {
                            by.data("autoplay", false);
                            by.data("autoplayonlyfirsttime", false)
                        }
                    }
                }
                var br = 0;
                var bw = 0;
                if (by.find("img").length > 0) {
                    var bi = by.find("img");
                    if (bi.width() == 0) {
                        bi.css({
                            width: "auto"
                        })
                    }
                    if (bi.height() == 0) {
                        bi.css({
                            height: "auto"
                        })
                    }
                    if (bi.data("ww") == aJ && bi.width() > 0) {
                        bi.data("ww", bi.width())
                    }
                    if (bi.data("hh") == aJ && bi.height() > 0) {
                        bi.data("hh", bi.height())
                    }
                    var bB = bi.data("ww");
                    var bk = bi.data("hh");
                    if (bB == aJ) {
                        bB = 0
                    }
                    if (bk == aJ) {
                        bk = 0
                    }
                    bi.width(bB * b.bw);
                    bi.height(bk * b.bh);
                    br = bi.width();
                    bw = bi.height()
                } else {
                    if (by.find("iframe").length > 0 || by.find("video").length > 0) {
                        var ba = false;
                        var bi = by.find("iframe");
                        if (bi.length == 0) {
                            bi = by.find("video");
                            ba = true
                        }
                        bi.css({
                            display: "block"
                        });
                        if (by.data("ww") == aJ) {
                            by.data("ww", bi.width())
                        }
                        if (by.data("hh") == aJ) {
                            by.data("hh", bi.height())
                        }
                        var bB = by.data("ww");
                        var bk = by.data("hh");
                        var H = by;
                        if (H.data("fsize") == aJ) {
                            H.data("fsize", parseInt(H.css("font-size"), 0) || 0)
                        }
                        if (H.data("pt") == aJ) {
                            H.data("pt", parseInt(H.css("paddingTop"), 0) || 0)
                        }
                        if (H.data("pb") == aJ) {
                            H.data("pb", parseInt(H.css("paddingBottom"), 0) || 0)
                        }
                        if (H.data("pl") == aJ) {
                            H.data("pl", parseInt(H.css("paddingLeft"), 0) || 0)
                        }
                        if (H.data("pr") == aJ) {
                            H.data("pr", parseInt(H.css("paddingRight"), 0) || 0)
                        }
                        if (H.data("mt") == aJ) {
                            H.data("mt", parseInt(H.css("marginTop"), 0) || 0)
                        }
                        if (H.data("mb") == aJ) {
                            H.data("mb", parseInt(H.css("marginBottom"), 0) || 0)
                        }
                        if (H.data("ml") == aJ) {
                            H.data("ml", parseInt(H.css("marginLeft"), 0) || 0)
                        }
                        if (H.data("mr") == aJ) {
                            H.data("mr", parseInt(H.css("marginRight"), 0) || 0)
                        }
                        if (H.data("bt") == aJ) {
                            H.data("bt", parseInt(H.css("borderTop"), 0) || 0)
                        }
                        if (H.data("bb") == aJ) {
                            H.data("bb", parseInt(H.css("borderBottom"), 0) || 0)
                        }
                        if (H.data("bl") == aJ) {
                            H.data("bl", parseInt(H.css("borderLeft"), 0) || 0)
                        }
                        if (H.data("br") == aJ) {
                            H.data("br", parseInt(H.css("borderRight"), 0) || 0)
                        }
                        if (H.data("lh") == aJ) {
                            H.data("lh", parseInt(H.css("lineHeight"), 0) || 0)
                        }
                        var bj = b.width;
                        var A = b.height;
                        if (bj > b.startwidth) {
                            bj = b.startwidth
                        }
                        if (A > b.startheight) {
                            A = b.startheight
                        }
                        if (!by.hasClass("fullscreenvideo")) {
                            by.css({
                                "font-size": H.data("fsize") * b.bw + "px",
                                "padding-top": H.data("pt") * b.bh + "px",
                                "padding-bottom": H.data("pb") * b.bh + "px",
                                "padding-left": H.data("pl") * b.bw + "px",
                                "padding-right": H.data("pr") * b.bw + "px",
                                "margin-top": H.data("mt") * b.bh + "px",
                                "margin-bottom": H.data("mb") * b.bh + "px",
                                "margin-left": H.data("ml") * b.bw + "px",
                                "margin-right": H.data("mr") * b.bw + "px",
                                "border-top": H.data("bt") * b.bh + "px",
                                "border-bottom": H.data("bb") * b.bh + "px",
                                "border-left": H.data("bl") * b.bw + "px",
                                "border-right": H.data("br") * b.bw + "px",
                                "line-height": H.data("lh") * b.bh + "px",
                                height: bk * b.bh + "px"
                            })
                        } else {
                            p = 0;
                            m = 0;
                            by.data("x", 0);
                            by.data("y", 0);
                            var P = b.height;
                            if (b.autoHeight == "on") {
                                P = b.container.height()
                            }
                            by.css({
                                width: b.width,
                                height: P
                            })
                        }
                        if (ba == false) {
                            bi.width(bB * b.bw);
                            bi.height(bk * b.bh)
                        } else {
                            if (by.data("forcecover") != 1 && !by.hasClass("fullscreenvideo")) {
                                bi.width(bB * b.bw);
                                bi.height(bk * b.bh)
                            }
                        }
                        br = bi.width();
                        bw = bi.height()
                    } else {
                        by.find(".tp-resizeme, .tp-resizeme *").each(function() {
                            ar(a0(this), b)
                        });
                        if (by.hasClass("tp-resizeme")) {
                            by.find("*").each(function() {
                                ar(a0(this), b)
                            })
                        }
                        ar(by, b);
                        bw = by.outerHeight(true);
                        br = by.outerWidth(true);
                        var bb = by.outerHeight();
                        var bt = by.css("backgroundColor");
                        by.find(".frontcorner").css({
                            borderWidth: bb + "px",
                            left: 0 - bb + "px",
                            borderRight: "0px solid transparent",
                            borderTopColor: bt
                        });
                        by.find(".frontcornertop").css({
                            borderWidth: bb + "px",
                            left: 0 - bb + "px",
                            borderRight: "0px solid transparent",
                            borderBottomColor: bt
                        });
                        by.find(".backcorner").css({
                            borderWidth: bb + "px",
                            right: 0 - bb + "px",
                            borderLeft: "0px solid transparent",
                            borderBottomColor: bt
                        });
                        by.find(".backcornertop").css({
                            borderWidth: bb + "px",
                            right: 0 - bb + "px",
                            borderLeft: "0px solid transparent",
                            borderTopColor: bt
                        })
                    }
                }
                if (b.fullScreenAlignForce == "on") {
                    p = 0;
                    m = 0
                }
                if (by.data("voffset") == aJ) {
                    by.data("voffset", 0)
                }
                if (by.data("hoffset") == aJ) {
                    by.data("hoffset", 0)
                }
                var R = by.data("voffset") * bs;
                var M = by.data("hoffset") * bs;
                var bc = b.startwidth * bs;
                var a9 = b.startheight * bs;
                if (b.fullScreenAlignForce == "on") {
                    bc = b.container.width();
                    a9 = b.container.height()
                }
                if (by.data("x") == "center" || by.data("xcenter") == "center") {
                    by.data("xcenter", "center");
                    by.data("x", bc / 2 - by.outerWidth(true) / 2 + M)
                }
                if (by.data("x") == "left" || by.data("xleft") == "left") {
                    by.data("xleft", "left");
                    by.data("x", 0 / bs + M)
                }
                if (by.data("x") == "right" || by.data("xright") == "right") {
                    by.data("xright", "right");
                    by.data("x", (bc - by.outerWidth(true) + M) / bs)
                }
                if (by.data("y") == "center" || by.data("ycenter") == "center") {
                    by.data("ycenter", "center");
                    by.data("y", a9 / 2 - by.outerHeight(true) / 2 + R)
                }
                if (by.data("y") == "top" || by.data("ytop") == "top") {
                    by.data("ytop", "top");
                    by.data("y", 0 / b.bh + R)
                }
                if (by.data("y") == "bottom" || by.data("ybottom") == "bottom") {
                    by.data("ybottom", "bottom");
                    by.data("y", (a9 - by.outerHeight(true) + R) / bs)
                }
                if (by.data("start") == aJ) {
                    by.data("start", 1000)
                }
                var z = by.data("easing");
                if (z == aJ) {
                    z = "punchgs.Power1.easeOut"
                }
                var t = by.data("start") / 1000;
                var u = by.data("speed") / 1000;
                if (by.data("x") == "center" || by.data("xcenter") == "center") {
                    var a6 = by.data("x") + p
                } else {
                    var a6 = bs * by.data("x") + p
                }
                if (by.data("y") == "center" || by.data("ycenter") == "center") {
                    var W = by.data("y") + m
                } else {
                    var W = b.bh * by.data("y") + m
                }
                punchgs.TweenLite.set(by, {
                    top: W,
                    left: a6,
                    overwrite: "auto"
                });
                if (bp == 0) {
                    bm = true
                }
                if (by.data("timeline") != aJ && !bm) {
                    by.data("timeline").gotoAndPlay(0);
                    bm = true
                }
                if (!bm) {
                    if (by.data("timeline") != aJ) {}

                    function I() {}

                    function a8() {}
                    var r = new punchgs.TimelineLite({
                        smoothChildTiming: true,
                        onStart: a8
                    });
                    r.pause();
                    if (b.fullScreenAlignForce == "on") {}
                    var a = by;
                    if (by.data("mySplitText") != aJ) {
                        by.data("mySplitText").revert()
                    }
                    if (by.data("splitin") == "chars" || by.data("splitin") == "words" || by.data("splitin") == "lines" || by.data("splitout") == "chars" || by.data("splitout") == "words" || by.data("splitout") == "lines") {
                        if (by.find("a").length > 0) {
                            by.data("mySplitText", new punchgs.SplitText(by.find("a"), {
                                type: "lines,words,chars",
                                charsClass: "tp-splitted",
                                wordsClass: "tp-splitted",
                                linesClass: "tp-splitted"
                            }))
                        } else {
                            if (by.find(".tp-layer-inner-rotation").length > 0) {
                                by.data("mySplitText", new punchgs.SplitText(by.find(".tp-layer-inner-rotation"), {
                                    type: "lines,words,chars",
                                    charsClass: "tp-splitted",
                                    wordsClass: "tp-splitted",
                                    linesClass: "tp-splitted"
                                }))
                            } else {
                                by.data("mySplitText", new punchgs.SplitText(by, {
                                    type: "lines,words,chars",
                                    charsClass: "tp-splitted",
                                    wordsClass: "tp-splitted",
                                    linesClass: "tp-splitted"
                                }))
                            }
                        }
                        by.addClass("splitted")
                    }
                    if (by.data("splitin") == "chars") {
                        a = by.data("mySplitText").chars
                    }
                    if (by.data("splitin") == "words") {
                        a = by.data("mySplitText").words
                    }
                    if (by.data("splitin") == "lines") {
                        a = by.data("mySplitText").lines
                    }
                    var bn = ax();
                    var bx = ax();
                    if (by.data("repeat") != aJ) {
                        repeatV = by.data("repeat")
                    }
                    if (by.data("yoyo") != aJ) {
                        yoyoV = by.data("yoyo")
                    }
                    if (by.data("repeatdelay") != aJ) {
                        repeatdelayV = by.data("repeatdelay")
                    }
                    if (by.hasClass("customin")) {
                        bn = ak(bn, by.data("customin"))
                    } else {
                        if (by.hasClass("randomrotate")) {
                            bn.scale = Math.random() * 3 + 1;
                            bn.rotation = Math.round(Math.random() * 200 - 100);
                            bn.x = Math.round(Math.random() * 200 - 100);
                            bn.y = Math.round(Math.random() * 200 - 100)
                        } else {
                            if (by.hasClass("lfr") || by.hasClass("skewfromright")) {
                                bn.x = 15 + b.width
                            } else {
                                if (by.hasClass("lfl") || by.hasClass("skewfromleft")) {
                                    bn.x = -15 - br
                                } else {
                                    if (by.hasClass("sfl") || by.hasClass("skewfromleftshort")) {
                                        bn.x = -50
                                    } else {
                                        if (by.hasClass("sfr") || by.hasClass("skewfromrightshort")) {
                                            bn.x = 50
                                        } else {
                                            if (by.hasClass("lft")) {
                                                bn.y = -25 - bw
                                            } else {
                                                if (by.hasClass("lfb")) {
                                                    bn.y = 25 + b.height
                                                } else {
                                                    if (by.hasClass("sft")) {
                                                        bn.y = -50
                                                    } else {
                                                        if (by.hasClass("sfb")) {
                                                            bn.y = 50
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if (by.hasClass("skewfromright") || by.hasClass("skewfromrightshort")) {
                        bn.skewX = -85
                    } else {
                        if (by.hasClass("skewfromleft") || by.hasClass("skewfromleftshort")) {
                            bn.skewX = 85
                        }
                    }
                    if (by.hasClass("fade") || by.hasClass("sft") || by.hasClass("sfl") || by.hasClass("sfb") || by.hasClass("skewfromleftshort") || by.hasClass("sfr") || by.hasClass("skewfromrightshort")) {
                        bn.opacity = 0
                    }
                    if (aV().toLowerCase() == "safari") {}
                    var bu = by.data("elementdelay") == aJ ? 0 : by.data("elementdelay");
                    bx.ease = bn.ease = by.data("easing") == aJ ? punchgs.Power1.easeInOut : by.data("easing");
                    bn.data = new Object;
                    bn.data.oldx = bn.x;
                    bn.data.oldy = bn.y;
                    bx.data = new Object;
                    bx.data.oldx = bx.x;
                    bx.data.oldy = bx.y;
                    bn.x = bn.x * bs;
                    bn.y = bn.y * bs;
                    var bg = new punchgs.TimelineLite;
                    if (bp != 2) {
                        if (by.hasClass("customin")) {
                            if (a != by) {
                                r.add(punchgs.TweenLite.set(by, {
                                    force3D: "auto",
                                    opacity: 1,
                                    scaleX: 1,
                                    scaleY: 1,
                                    rotationX: 0,
                                    rotationY: 0,
                                    rotationZ: 0,
                                    skewX: 0,
                                    skewY: 0,
                                    z: 0,
                                    x: 0,
                                    y: 0,
                                    visibility: "visible",
                                    opacity: 1,
                                    delay: 0,
                                    overwrite: "all"
                                }))
                            }
                            bn.visibility = "hidden";
                            bx.visibility = "visible";
                            bx.overwrite = "all";
                            bx.opacity = 1;
                            bx.onComplete = I();
                            bx.delay = t;
                            bx.force3D = "auto";
                            r.add(bg.staggerFromTo(a, u, bn, bx, bu), "frame0")
                        } else {
                            bn.visibility = "visible";
                            bn.transformPerspective = 600;
                            if (a != by) {
                                r.add(punchgs.TweenLite.set(by, {
                                    force3D: "auto",
                                    opacity: 1,
                                    scaleX: 1,
                                    scaleY: 1,
                                    rotationX: 0,
                                    rotationY: 0,
                                    rotationZ: 0,
                                    skewX: 0,
                                    skewY: 0,
                                    z: 0,
                                    x: 0,
                                    y: 0,
                                    visibility: "visible",
                                    opacity: 1,
                                    delay: 0,
                                    overwrite: "all"
                                }))
                            }
                            bx.visibility = "visible";
                            bx.delay = t;
                            bx.onComplete = I();
                            bx.opacity = 1;
                            bx.force3D = "auto";
                            if (by.hasClass("randomrotate") && a != by) {
                                for (var bq = 0; bq < a.length; bq++) {
                                    var be = new Object;
                                    var a7 = new Object;
                                    a0.extend(be, bn);
                                    a0.extend(a7, bx);
                                    bn.scale = Math.random() * 3 + 1;
                                    bn.rotation = Math.round(Math.random() * 200 - 100);
                                    bn.x = Math.round(Math.random() * 200 - 100);
                                    bn.y = Math.round(Math.random() * 200 - 100);
                                    if (bq != 0) {
                                        a7.delay = t + bq * bu
                                    }
                                    r.append(punchgs.TweenLite.fromTo(a[bq], u, be, a7), "frame0")
                                }
                            } else {
                                r.add(bg.staggerFromTo(a, u, bn, bx, bu), "frame0")
                            }
                        }
                    }
                    by.data("timeline", r);
                    var bf = new Array;
                    if (by.data("frames") != aJ) {
                        var bh = by.data("frames");
                        bh = bh.replace(/\s+/g, "");
                        bh = bh.replace("{", "");
                        var D = bh.split("}");
                        a0.each(D, function(f, c) {
                            if (c.length > 0) {
                                var l = at(c);
                                aD(by, b, l, "frame" + (f + 10), bs)
                            }
                        })
                    }
                    r = by.data("timeline");
                    if (by.data("end") != aJ && (bp == -1 || bp == 2)) {
                        ad(by, b, by.data("end") / 1000, bn, "frame99", bs)
                    } else {
                        if (bp == -1 || bp == 2) {
                            ad(by, b, 999999, bn, "frame99", bs)
                        } else {
                            ad(by, b, 200, bn, "frame99", bs)
                        }
                    }
                    r = by.data("timeline");
                    by.data("timeline", r);
                    aM(by, bs);
                    r.resume()
                }
            }
            if (bm) {
                ai(by);
                aM(by, bs);
                if (by.data("timeline") != aJ) {
                    var bd = by.data("timeline").getTweensOf();
                    a0.each(bd, function(o, v) {
                        if (v.vars.data != aJ) {
                            var l = v.vars.data.oldx * bs;
                            var c = v.vars.data.oldy * bs;
                            if (v.progress() != 1 && v.progress() != 0) {
                                try {
                                    v.vars.x = l;
                                    v.vary.y = c
                                } catch (f) {}
                            } else {
                                if (v.progress() == 1) {
                                    punchgs.TweenLite.set(v.target, {
                                        x: l,
                                        y: c
                                    })
                                }
                            }
                        }
                    })
                }
            }
        });
        var k = a0("body").find("#" + b.container.attr("id")).find(".tp-bannertimer");
        k.data("opt", b);
        if (q != aJ) {
            setTimeout(function() {
                q.resume()
            }, 30)
        }
    };
    var aV = function() {
        var c = navigator.appName,
            a = navigator.userAgent,
            d;
        var b = a.match(/(opera|chrome|safari|firefox|msie)\/?\s*(\.?\d+(\.\d+)*)/i);
        if (b && (d = a.match(/version\/([\.\d]+)/i)) != null) {
            b[2] = d[1]
        }
        b = b ? [b[1], b[2]] : [c, navigator.appVersion, "-?"];
        return b[0]
    };
    var av = function() {
        var c = navigator.appName,
            a = navigator.userAgent,
            d;
        var b = a.match(/(opera|chrome|safari|firefox|msie)\/?\s*(\.?\d+(\.\d+)*)/i);
        if (b && (d = a.match(/version\/([\.\d]+)/i)) != null) {
            b[2] = d[1]
        }
        b = b ? [b[1], b[2]] : [c, navigator.appVersion, "-?"];
        return b[1]
    };
    var ar = function(a, b) {
        if (a.data("fsize") == aJ) {
            a.data("fsize", parseInt(a.css("font-size"), 0) || 0)
        }
        if (a.data("pt") == aJ) {
            a.data("pt", parseInt(a.css("paddingTop"), 0) || 0)
        }
        if (a.data("pb") == aJ) {
            a.data("pb", parseInt(a.css("paddingBottom"), 0) || 0)
        }
        if (a.data("pl") == aJ) {
            a.data("pl", parseInt(a.css("paddingLeft"), 0) || 0)
        }
        if (a.data("pr") == aJ) {
            a.data("pr", parseInt(a.css("paddingRight"), 0) || 0)
        }
        if (a.data("mt") == aJ) {
            a.data("mt", parseInt(a.css("marginTop"), 0) || 0)
        }
        if (a.data("mb") == aJ) {
            a.data("mb", parseInt(a.css("marginBottom"), 0) || 0)
        }
        if (a.data("ml") == aJ) {
            a.data("ml", parseInt(a.css("marginLeft"), 0) || 0)
        }
        if (a.data("mr") == aJ) {
            a.data("mr", parseInt(a.css("marginRight"), 0) || 0)
        }
        if (a.data("bt") == aJ) {
            a.data("bt", parseInt(a.css("borderTopWidth"), 0) || 0)
        }
        if (a.data("bb") == aJ) {
            a.data("bb", parseInt(a.css("borderBottomWidth"), 0) || 0)
        }
        if (a.data("bl") == aJ) {
            a.data("bl", parseInt(a.css("borderLeftWidth"), 0) || 0)
        }
        if (a.data("br") == aJ) {
            a.data("br", parseInt(a.css("borderRightWidth"), 0) || 0)
        }
        if (a.data("ls") == aJ) {
            a.data("ls", parseInt(a.css("letterSpacing"), 0) || 0)
        }
        if (a.data("lh") == aJ) {
            a.data("lh", parseInt(a.css("lineHeight"), 0) || "auto")
        }
        if (a.data("minwidth") == aJ) {
            a.data("minwidth", parseInt(a.css("minWidth"), 0) || 0)
        }
        if (a.data("minheight") == aJ) {
            a.data("minheight", parseInt(a.css("minHeight"), 0) || 0)
        }
        if (a.data("maxwidth") == aJ) {
            a.data("maxwidth", parseInt(a.css("maxWidth"), 0) || "none")
        }
        if (a.data("maxheight") == aJ) {
            a.data("maxheight", parseInt(a.css("maxHeight"), 0) || "none")
        }
        if (a.data("wii") == aJ) {
            a.data("wii", parseInt(a.css("width"), 0) || 0)
        }
        if (a.data("hii") == aJ) {
            a.data("hii", parseInt(a.css("height"), 0) || 0)
        }
        if (a.data("wan") == aJ) {
            a.data("wan", a.css("-webkit-transition"))
        }
        if (a.data("moan") == aJ) {
            a.data("moan", a.css("-moz-animation-transition"))
        }
        if (a.data("man") == aJ) {
            a.data("man", a.css("-ms-animation-transition"))
        }
        if (a.data("ani") == aJ) {
            a.data("ani", a.css("transition"))
        }
        if (!a.hasClass("tp-splitted")) {
            a.css("-webkit-transition", "none");
            a.css("-moz-transition", "none");
            a.css("-ms-transition", "none");
            a.css("transition", "none");
            punchgs.TweenLite.set(a, {
                fontSize: Math.round(a.data("fsize") * b.bw) + "px",
                letterSpacing: Math.floor(a.data("ls") * b.bw) + "px",
                paddingTop: Math.round(a.data("pt") * b.bh) + "px",
                paddingBottom: Math.round(a.data("pb") * b.bh) + "px",
                paddingLeft: Math.round(a.data("pl") * b.bw) + "px",
                paddingRight: Math.round(a.data("pr") * b.bw) + "px",
                marginTop: a.data("mt") * b.bh + "px",
                marginBottom: a.data("mb") * b.bh + "px",
                marginLeft: a.data("ml") * b.bw + "px",
                marginRight: a.data("mr") * b.bw + "px",
                borderTopWidth: Math.round(a.data("bt") * b.bh) + "px",
                borderBottomWidth: Math.round(a.data("bb") * b.bh) + "px",
                borderLeftWidth: Math.round(a.data("bl") * b.bw) + "px",
                borderRightWidth: Math.round(a.data("br") * b.bw) + "px",
                lineHeight: Math.round(a.data("lh") * b.bh) + "px",
                minWidth: a.data("minwidth") * b.bw + "px",
                minHeight: a.data("minheight") * b.bh + "px",
                overwrite: "auto"
            });
            setTimeout(function() {
                a.css("-webkit-transition", a.data("wan"));
                a.css("-moz-transition", a.data("moan"));
                a.css("-ms-transition", a.data("man"));
                a.css("transition", a.data("ani"))
            }, 30);
            if (a.data("maxheight") != "none") {
                a.css({
                    maxHeight: a.data("maxheight") * b.bh + "px"
                })
            }
            if (a.data("maxwidth") != "none") {
                a.css({
                    maxWidth: a.data("maxwidth") * b.bw + "px"
                })
            }
        }
    };
    var aM = function(b, a) {
        b.find(".rs-pendulum").each(function() {
            var e = a0(this);
            if (e.data("timeline") == aJ) {
                e.data("timeline", new punchgs.TimelineLite);
                var c = e.data("startdeg") == aJ ? -20 : e.data("startdeg"),
                    d = e.data("enddeg") == aJ ? 20 : e.data("enddeg");
                speed = e.data("speed") == aJ ? 2 : e.data("speed"), origin = e.data("origin") == aJ ? "50% 50%" : e.data("origin"), easing = e.data("ease") == aJ ? punchgs.Power2.easeInOut : e.data("ease");
                c = c * a;
                d = d * a;
                e.data("timeline").append(new punchgs.TweenLite.fromTo(e, speed, {
                    force3D: "auto",
                    rotation: c,
                    transformOrigin: origin
                }, {
                    rotation: d,
                    ease: easing
                }));
                e.data("timeline").append(new punchgs.TweenLite.fromTo(e, speed, {
                    force3D: "auto",
                    rotation: d,
                    transformOrigin: origin
                }, {
                    rotation: c,
                    ease: easing,
                    onComplete: function() {
                        e.data("timeline").restart()
                    }
                }))
            }
        });
        b.find(".rs-slideloop").each(function() {
            var e = a0(this);
            if (e.data("timeline") == aJ) {
                e.data("timeline", new punchgs.TimelineLite);
                var c = e.data("xs") == aJ ? 0 : e.data("xs"),
                    d = e.data("ys") == aJ ? 0 : e.data("ys");
                xe = e.data("xe") == aJ ? 0 : e.data("xe"), ye = e.data("ye") == aJ ? 0 : e.data("ye"), speed = e.data("speed") == aJ ? 2 : e.data("speed"), easing = e.data("ease") == aJ ? punchgs.Power2.easeInOut : e.data("ease");
                c = c * a;
                d = d * a;
                xe = xe * a;
                ye = ye * a;
                e.data("timeline").append(new punchgs.TweenLite.fromTo(e, speed, {
                    force3D: "auto",
                    x: c,
                    y: d
                }, {
                    x: xe,
                    y: ye,
                    ease: easing
                }));
                e.data("timeline").append(new punchgs.TweenLite.fromTo(e, speed, {
                    force3D: "auto",
                    x: xe,
                    y: ye
                }, {
                    x: c,
                    y: d,
                    onComplete: function() {
                        e.data("timeline").restart()
                    }
                }))
            }
        });
        b.find(".rs-pulse").each(function() {
            var e = a0(this);
            if (e.data("timeline") == aJ) {
                e.data("timeline", new punchgs.TimelineLite);
                var d = e.data("zoomstart") == aJ ? 0 : e.data("zoomstart"),
                    c = e.data("zoomend") == aJ ? 0 : e.data("zoomend");
                speed = e.data("speed") == aJ ? 2 : e.data("speed"), easing = e.data("ease") == aJ ? punchgs.Power2.easeInOut : e.data("ease");
                e.data("timeline").append(new punchgs.TweenLite.fromTo(e, speed, {
                    force3D: "auto",
                    scale: d
                }, {
                    scale: c,
                    ease: easing
                }));
                e.data("timeline").append(new punchgs.TweenLite.fromTo(e, speed, {
                    force3D: "auto",
                    scale: c
                }, {
                    scale: d,
                    onComplete: function() {
                        e.data("timeline").restart()
                    }
                }))
            }
        });
        b.find(".rs-wave").each(function() {
            var h = a0(this);
            if (h.data("timeline") == aJ) {
                h.data("timeline", new punchgs.TimelineLite);
                var e = h.data("angle") == aJ ? 10 : h.data("angle"),
                    f = h.data("radius") == aJ ? 10 : h.data("radius"),
                    g = h.data("speed") == aJ ? -20 : h.data("speed"),
                    d = h.data("origin") == aJ ? -20 : h.data("origin");
                e = e * a;
                f = f * a;
                var c = {
                    a: 0,
                    ang: e,
                    element: h,
                    unit: f
                };
                h.data("timeline").append(new punchgs.TweenLite.fromTo(c, g, {
                    a: 360
                }, {
                    a: 0,
                    force3D: "auto",
                    ease: punchgs.Linear.easeNone,
                    onUpdate: function() {
                        var j = c.a * (Math.PI / 180);
                        punchgs.TweenLite.to(c.element, 0.1, {
                            force3D: "auto",
                            x: Math.cos(j) * c.unit,
                            y: c.unit * (1 - Math.sin(j))
                        })
                    },
                    onComplete: function() {
                        h.data("timeline").restart()
                    }
                }))
            }
        })
    };
    var ai = function(a) {
        a.find(".rs-pendulum, .rs-slideloop, .rs-pulse, .rs-wave").each(function() {
            var b = a0(this);
            if (b.data("timeline") != aJ) {
                b.data("timeline").pause();
                b.data("timeline", null)
            }
        })
    };
    var af = function(e, c) {
        var a = 0;
        var b = e.find(".tp-caption"),
            d = c.container.find(".tp-static-layers").find(".tp-caption");
        a0.each(d, function(g, f) {
            b.push(f)
        });
        b.each(function(k) {
            var C = -1;
            var j = a0(this);
            if (j.hasClass("tp-static-layer")) {
                if (j.data("startslide") == -1 || j.data("startslide") == "-1") {
                    j.data("startslide", 0)
                }
                if (j.data("endslide") == -1 || j.data("endslide") == "-1") {
                    j.data("endslide", c.slideamount)
                }
                if (j.hasClass("tp-is-shown")) {
                    if (j.data("startslide") > c.next || j.data("endslide") < c.next) {
                        C = 2;
                        j.removeClass("tp-is-shown")
                    } else {
                        C = 0
                    }
                } else {
                    C = 2
                }
            }
            if (C != 0) {
                ai(j);
                if (j.find("iframe").length > 0) {
                    try {
                        var B = j.find("iframe");
                        var z = B.attr("id");
                        var w = $f(z);
                        w.api("pause");
                        clearTimeout(j.data("timerplay"))
                    } catch (r) {}
                    try {
                        var y = j.data("player");
                        y.stopVideo();
                        clearTimeout(j.data("timerplay"))
                    } catch (r) {}
                }
                if (j.find("video").length > 0) {
                    try {
                        j.find("video").each(function(h) {
                            var m = a0(this).parent();
                            var l = m.attr("id");
                            clearTimeout(m.data("timerplay"));
                            var f = this;
                            f.pause()
                        })
                    } catch (r) {}
                }
                try {
                    var t = j.data("timeline");
                    var g = t.getLabelTime("frame99");
                    var x = t.time();
                    if (g > x) {
                        var A = t.getTweensOf(j);
                        a0.each(A, function(h, f) {
                            if (h != 0) {
                                f.pause()
                            }
                        });
                        if (j.css("opacity") != 0) {
                            var q = j.data("endspeed") == aJ ? j.data("speed") : j.data("endspeed");
                            if (q > a) {
                                a = q
                            }
                            t.play("frame99")
                        } else {
                            t.progress(1, false)
                        }
                    }
                } catch (r) {}
            }
        });
        return a
    };
    var aD = function(h, k, g, d, f) {
        var j = h.data("timeline");
        var c = new punchgs.TimelineLite;
        var b = h;
        if (g.typ == "chars") {
            b = h.data("mySplitText").chars
        } else {
            if (g.typ == "words") {
                b = h.data("mySplitText").words
            } else {
                if (g.typ == "lines") {
                    b = h.data("mySplitText").lines
                }
            }
        }
        g.animation.ease = g.ease;
        if (g.animation.rotationZ != aJ) {
            g.animation.rotation = g.animation.rotationZ
        }
        g.animation.data = new Object;
        g.animation.data.oldx = g.animation.x;
        g.animation.data.oldy = g.animation.y;
        g.animation.x = g.animation.x * f;
        g.animation.y = g.animation.y * f;
        j.add(c.staggerTo(b, g.speed, g.animation, g.elementdelay), g.start);
        j.addLabel(d, g.start);
        h.data("timeline", j)
    };
    var ad = function(q, g, b, k, x, d) {
        var w = q.data("timeline");
        var v = new punchgs.TimelineLite;
        var p = ax();
        var j = q.data("endspeed") == aJ ? q.data("speed") : q.data("endspeed");
        p.ease = q.data("endeasing") == aJ ? punchgs.Power1.easeInOut : q.data("endeasing");
        j = j / 1000;
        if (q.hasClass("ltr") || q.hasClass("ltl") || q.hasClass("str") || q.hasClass("stl") || q.hasClass("ltt") || q.hasClass("ltb") || q.hasClass("stt") || q.hasClass("stb") || q.hasClass("skewtoright") || q.hasClass("skewtorightshort") || q.hasClass("skewtoleft") || q.hasClass("skewtoleftshort") || q.hasClass("fadeout") || q.hasClass("randomrotateout")) {
            if (q.hasClass("skewtoright") || q.hasClass("skewtorightshort")) {
                p.skewX = 35
            } else {
                if (q.hasClass("skewtoleft") || q.hasClass("skewtoleftshort")) {
                    p.skewX = -35
                }
            }
            if (q.hasClass("ltr") || q.hasClass("skewtoright")) {
                p.x = g.width + 60
            } else {
                if (q.hasClass("ltl") || q.hasClass("skewtoleft")) {
                    p.x = 0 - (g.width + 60)
                } else {
                    if (q.hasClass("ltt")) {
                        p.y = 0 - (g.height + 60)
                    } else {
                        if (q.hasClass("ltb")) {
                            p.y = g.height + 60
                        } else {
                            if (q.hasClass("str") || q.hasClass("skewtorightshort")) {
                                p.x = 50;
                                p.opacity = 0
                            } else {
                                if (q.hasClass("stl") || q.hasClass("skewtoleftshort")) {
                                    p.x = -50;
                                    p.opacity = 0
                                } else {
                                    if (q.hasClass("stt")) {
                                        p.y = -50;
                                        p.opacity = 0
                                    } else {
                                        if (q.hasClass("stb")) {
                                            p.y = 50;
                                            p.opacity = 0
                                        } else {
                                            if (q.hasClass("randomrotateout")) {
                                                p.x = Math.random() * g.width;
                                                p.y = Math.random() * g.height;
                                                p.scale = Math.random() * 2 + 0.3;
                                                p.rotation = Math.random() * 360 - 180;
                                                p.opacity = 0
                                            } else {
                                                if (q.hasClass("fadeout")) {
                                                    p.opacity = 0
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (q.hasClass("skewtorightshort")) {
                p.x = 270
            } else {
                if (q.hasClass("skewtoleftshort")) {
                    p.x = -270
                }
            }
            p.data = new Object;
            p.data.oldx = p.x;
            p.data.oldy = p.y;
            p.x = p.x * d;
            p.y = p.y * d;
            p.overwrite = "auto";
            var t = q;
            var t = q;
            if (q.data("splitout") == "chars") {
                t = q.data("mySplitText").chars
            } else {
                if (q.data("splitout") == "words") {
                    t = q.data("mySplitText").words
                } else {
                    if (q.data("splitout") == "lines") {
                        t = q.data("mySplitText").lines
                    }
                }
            }
            var m = q.data("endelementdelay") == aJ ? 0 : q.data("endelementdelay");
            w.add(v.staggerTo(t, j, p, m), b)
        } else {
            if (q.hasClass("customout")) {
                p = ak(p, q.data("customout"));
                var t = q;
                if (q.data("splitout") == "chars") {
                    t = q.data("mySplitText").chars
                } else {
                    if (q.data("splitout") == "words") {
                        t = q.data("mySplitText").words
                    } else {
                        if (q.data("splitout") == "lines") {
                            t = q.data("mySplitText").lines
                        }
                    }
                }
                var m = q.data("endelementdelay") == aJ ? 0 : q.data("endelementdelay");
                p.onStart = function() {
                    punchgs.TweenLite.set(q, {
                        transformPerspective: p.transformPerspective,
                        transformOrigin: p.transformOrigin,
                        overwrite: "auto"
                    })
                };
                p.data = new Object;
                p.data.oldx = p.x;
                p.data.oldy = p.y;
                p.x = p.x * d;
                p.y = p.y * d;
                w.add(v.staggerTo(t, j, p, m), b)
            } else {
                k.delay = 0;
                w.add(punchgs.TweenLite.to(q, j, k), b)
            }
        }
        w.addLabel(x, b);
        q.data("timeline", w)
    };
    var ac = function(a, c) {
        a.children().each(function() {
            try {
                a0(this).die("click")
            } catch (d) {}
            try {
                a0(this).die("mouseenter")
            } catch (d) {}
            try {
                a0(this).die("mouseleave")
            } catch (d) {}
            try {
                a0(this).unbind("hover")
            } catch (d) {}
        });
        try {
            a.die("click", "mouseenter", "mouseleave")
        } catch (b) {}
        clearInterval(c.cdint);
        a = null
    };
    var ae = function(d, c) {
        c.cd = 0;
        c.loop = 0;
        if (c.stopAfterLoops != aJ && c.stopAfterLoops > -1) {
            c.looptogo = c.stopAfterLoops
        } else {
            c.looptogo = 9999999
        }
        if (c.stopAtSlide != aJ && c.stopAtSlide > -1) {
            c.lastslidetoshow = c.stopAtSlide
        } else {
            c.lastslidetoshow = 999
        }
        c.stopLoop = "off";
        if (c.looptogo == 0) {
            c.stopLoop = "on"
        }
        if (c.slideamount > 1 && !(c.stopAfterLoops == 0 && c.stopAtSlide == 1)) {
            var a = d.find(".tp-bannertimer");
            d.on("stoptimer", function() {
                a.data("tween").pause();
                if (c.hideTimerBar == "on") {
                    a.css({
                        visibility: "hidden"
                    })
                }
            });
            d.on("starttimer", function() {
                if (c.conthover != 1 && c.videoplaying != true && c.width > c.hideSliderAtLimit && c.bannertimeronpause != true && c.overnav != true) {
                    if (c.stopLoop == "on" && c.next == c.lastslidetoshow - 1) {} else {
                        a.css({
                            visibility: "visible"
                        });
                        a.data("tween").play()
                    }
                }
                if (c.hideTimerBar == "on") {
                    a.css({
                        visibility: "hidden"
                    })
                }
            });
            d.on("restarttimer", function() {
                if (c.stopLoop == "on" && c.next == c.lastslidetoshow - 1) {} else {
                    a.css({
                        visibility: "visible"
                    });
                    a.data("tween", punchgs.TweenLite.fromTo(a, c.delay / 1000, {
                        width: "0%"
                    }, {
                        force3D: "auto",
                        width: "100%",
                        ease: punchgs.Linear.easeNone,
                        onComplete: b,
                        delay: 1
                    }))
                }
                if (c.hideTimerBar == "on") {
                    a.css({
                        visibility: "hidden"
                    })
                }
            });
            d.on("nulltimer", function() {
                a.data("tween").pause(0);
                if (c.hideTimerBar == "on") {
                    a.css({
                        visibility: "hidden"
                    })
                }
            });
            var b = function() {
                if (a0("body").find(d).length == 0) {
                    ac(d, c);
                    clearInterval(c.cdint)
                }
                if (d.data("conthover-changed") == 1) {
                    c.conthover = d.data("conthover");
                    d.data("conthover-changed", 0)
                }
                c.act = c.next;
                c.next = c.next + 1;
                if (c.next > d.find(">ul >li").length - 1) {
                    c.next = 0;
                    c.looptogo = c.looptogo - 1;
                    if (c.looptogo <= 0) {
                        c.stopLoop = "on"
                    }
                }
                if (c.stopLoop == "on" && c.next == c.lastslidetoshow - 1) {
                    d.find(".tp-bannertimer").css({
                        visibility: "hidden"
                    });
                    d.trigger("revolution.slide.onstop")
                } else {
                    a.data("tween").restart()
                }
                ag(d, c)
            };
            a.data("tween", punchgs.TweenLite.fromTo(a, c.delay / 1000, {
                width: "0%"
            }, {
                force3D: "auto",
                width: "100%",
                ease: punchgs.Linear.easeNone,
                onComplete: b,
                delay: 1
            }));
            a.data("opt", c);
            d.hover(function() {
                if (c.onHoverStop == "on" && !aC()) {
                    d.trigger("stoptimer");
                    d.trigger("revolution.slide.onpause");
                    var e = d.find(">ul >li:eq(" + c.next + ") .slotholder");
                    e.find(".defaultimg").each(function() {
                        var f = a0(this);
                        if (f.data("kenburn") != aJ) {
                            f.data("kenburn").pause()
                        }
                    })
                }
            }, function() {
                if (d.data("conthover") != 1) {
                    d.trigger("revolution.slide.onresume");
                    d.trigger("starttimer");
                    var e = d.find(">ul >li:eq(" + c.next + ") .slotholder");
                    e.find(".defaultimg").each(function() {
                        var f = a0(this);
                        if (f.data("kenburn") != aJ) {
                            f.data("kenburn").play()
                        }
                    })
                }
            })
        }
    };
    var aC = function() {
        var b = ["android", "webos", "iphone", "ipad", "blackberry", "Android", "webos", , "iPod", "iPhone", "iPad", "Blackberry", "BlackBerry"];
        var a = false;
        for (i in b) {
            if (navigator.userAgent.split(b[i]).length > 1) {
                a = true
            }
        }
        return a
    };
    var aq = function(g, c, j) {
        var f = c.data("owidth");
        var b = c.data("oheight");
        if (f / b > j.width / j.height) {
            var d = j.container.width() / f;
            var h = b * d;
            var a = h / j.container.height() * g;
            g = g * (100 / a);
            a = 100;
            g = g;
            return g + "% " + a + "% 1"
        } else {
            var d = j.container.width() / f;
            var h = b * d;
            var a = h / j.container.height() * g;
            return g + "% " + a + "%"
        }
    };
    var ap = function(G, D, J, C) {
        try {
            var A = G.find(">ul:first-child >li:eq(" + D.act + ")")
        } catch (R) {
            var A = G.find(">ul:first-child >li:eq(1)")
        }
        D.lastslide = D.act;
        var M = G.find(">ul:first-child >li:eq(" + D.next + ")"),
            I = M.find(".slotholder"),
            P = I.data("bgposition"),
            K = I.data("bgpositionend"),
            F = I.data("zoomstart") / 100,
            O = I.data("zoomend") / 100,
            z = I.data("rotationstart"),
            H = I.data("rotationend"),
            L = I.data("bgfit"),
            o = I.data("bgfitend"),
            Q = I.data("easeme"),
            t = I.data("duration") / 1000,
            B = 100;
        if (L == aJ) {
            L = 100
        }
        if (o == aJ) {
            o = 100
        }
        var j = L,
            q = o;
        L = aq(L, I, D);
        o = aq(o, I, D);
        B = aq(100, I, D);
        if (F == aJ) {
            F = 1
        }
        if (O == aJ) {
            O = 1
        }
        if (z == aJ) {
            z = 0
        }
        if (H == aJ) {
            H = 0
        }
        if (F < 1) {
            F = 1
        }
        if (O < 1) {
            O = 1
        }
        var e = new Object;
        e.w = parseInt(B.split(" ")[0], 0), e.h = parseInt(B.split(" ")[1], 0);
        var k = false;
        if (B.split(" ")[2] == "1") {
            k = true
        }
        I.find(".defaultimg").each(function() {
            var w = a0(this);
            if (I.find(".kenburnimg").length == 0) {
                I.append('<div class="kenburnimg" style="position:absolute;z-index:1;width:100%;height:100%;top:0px;left:0px;"><img src="' + w.attr("src") + '" style="-webkit-touch-callout: none;-webkit-user-select: none;-khtml-user-select: none;-moz-user-select: none;-ms-user-select: none;user-select: none;position:absolute;width:' + e.w + "%;height:" + e.h + '%;"></div>')
            } else {
                I.find(".kenburnimg img").css({
                    width: e.w + "%",
                    height: e.h + "%"
                })
            }
            var c = I.find(".kenburnimg img");
            var g = aj(D, P, L, c, k),
                s = aj(D, K, o, c, k);
            if (k) {
                g.w = j / 100;
                s.w = q / 100
            }
            if (C) {
                punchgs.TweenLite.set(c, {
                    autoAlpha: 0,
                    transformPerspective: 1200,
                    transformOrigin: "0% 0%",
                    top: 0,
                    left: 0,
                    scale: g.w,
                    x: g.x,
                    y: g.y
                });
                var m = g.w,
                    h = m * c.width() - D.width,
                    b = m * c.height() - D.height,
                    l = Math.abs(g.x / h * 100),
                    r = Math.abs(g.y / b * 100);
                if (b == 0) {
                    r = 0
                }
                if (h == 0) {
                    l = 0
                }
                w.data("bgposition", l + "% " + r + "%");
                if (!aP(8)) {
                    w.data("currotate", au(c))
                }
                if (!aP(8)) {
                    w.data("curscale", e.w * m + "%  " + (e.h * m + "%"))
                }
                I.find(".kenburnimg").remove()
            } else {
                w.data("kenburn", punchgs.TweenLite.fromTo(c, t, {
                    autoAlpha: 1,
                    force3D: punchgs.force3d,
                    transformOrigin: "0% 0%",
                    top: 0,
                    left: 0,
                    scale: g.w,
                    x: g.x,
                    y: g.y
                }, {
                    autoAlpha: 1,
                    rotationZ: H,
                    ease: Q,
                    x: s.x,
                    y: s.y,
                    scale: s.w,
                    onUpdate: function() {
                        var v = c[0]._gsTransform.scaleX;
                        var n = v * c.width() - D.width,
                            p = v * c.height() - D.height,
                            f = Math.abs(c[0]._gsTransform.x / n * 100),
                            d = Math.abs(c[0]._gsTransform.y / p * 100);
                        if (p == 0) {
                            d = 0
                        }
                        if (n == 0) {
                            f = 0
                        }
                        w.data("bgposition", f + "% " + d + "%");
                        if (!aP(8)) {
                            w.data("currotate", au(c))
                        }
                        if (!aP(8)) {
                            w.data("curscale", e.w * v + "%  " + (e.h * v + "%"))
                        }
                    }
                }))
            }
        })
    };
    var aj = function(f, b, g, d, a) {
        var c = new Object;
        if (!a) {
            c.w = parseInt(g.split(" ")[0], 0) / 100
        } else {
            c.w = parseInt(g.split(" ")[1], 0) / 100
        }
        switch (b) {
            case "left top":
            case "top left":
                c.x = 0;
                c.y = 0;
                break;
            case "center top":
            case "top center":
                c.x = ((0 - d.width()) * c.w + parseInt(f.width, 0)) / 2;
                c.y = 0;
                break;
            case "top right":
            case "right top":
                c.x = (0 - d.width()) * c.w + parseInt(f.width, 0);
                c.y = 0;
                break;
            case "center left":
            case "left center":
                c.x = 0;
                c.y = ((0 - d.height()) * c.w + parseInt(f.height, 0)) / 2;
                break;
            case "center center":
                c.x = ((0 - d.width()) * c.w + parseInt(f.width, 0)) / 2;
                c.y = ((0 - d.height()) * c.w + parseInt(f.height, 0)) / 2;
                break;
            case "center right":
            case "right center":
                c.x = (0 - d.width()) * c.w + parseInt(f.width, 0);
                c.y = ((0 - d.height()) * c.w + parseInt(f.height, 0)) / 2;
                break;
            case "bottom left":
            case "left bottom":
                c.x = 0;
                c.y = (0 - d.height()) * c.w + parseInt(f.height, 0);
                break;
            case "bottom center":
            case "center bottom":
                c.x = ((0 - d.width()) * c.w + parseInt(f.width, 0)) / 2;
                c.y = (0 - d.height()) * c.w + parseInt(f.height, 0);
                break;
            case "bottom right":
            case "right bottom":
                c.x = (0 - d.width()) * c.w + parseInt(f.width, 0);
                c.y = (0 - d.height()) * c.w + parseInt(f.height, 0);
                break
        }
        return c
    };
    var au = function(f) {
        var b = f.css("-webkit-transform") || f.css("-moz-transform") || f.css("-ms-transform") || f.css("-o-transform") || f.css("transform");
        if (b !== "none") {
            var g = b.split("(")[1].split(")")[0].split(",");
            var d = g[0];
            var a = g[1];
            var c = Math.round(Math.atan2(a, d) * (180 / Math.PI))
        } else {
            var c = 0
        }
        return c < 0 ? c += 360 : c
    };
    var ab = function(h, f) {
        try {
            var d = h.find(">ul:first-child >li:eq(" + f.act + ")")
        } catch (e) {
            var d = h.find(">ul:first-child >li:eq(1)")
        }
        f.lastslide = f.act;
        var g = h.find(">ul:first-child >li:eq(" + f.next + ")");
        var c = d.find(".slotholder");
        var b = g.find(".slotholder");
        h.find(".defaultimg").each(function() {
            var a = a0(this);
            punchgs.TweenLite.killTweensOf(a, false);
            punchgs.TweenLite.set(a, {
                scale: 1,
                rotationZ: 0
            });
            punchgs.TweenLite.killTweensOf(a.data("kenburn img"), false);
            if (a.data("kenburn") != aJ) {
                a.data("kenburn").pause()
            }
            if (a.data("currotate") != aJ && a.data("bgposition") != aJ && a.data("curscale") != aJ) {
                punchgs.TweenLite.set(a, {
                    rotation: a.data("currotate"),
                    backgroundPosition: a.data("bgposition"),
                    backgroundSize: a.data("curscale")
                })
            }
            if (a != aJ && a.data("kenburn img") != aJ && a.data("kenburn img").length > 0) {
                punchgs.TweenLite.set(a.data("kenburn img"), {
                    autoAlpha: 0
                })
            }
        })
    };
    var aa = function(a, b) {
        if (aC() && b.parallaxDisableOnMobile == "on") {
            return false
        }
        a.find(">ul:first-child >li").each(function() {
            var c = a0(this);
            for (var d = 1; d <= 10; d++) {
                c.find(".rs-parallaxlevel-" + d).each(function() {
                    var e = a0(this);
                    e.wrap('<div style="position:absolute;top:0px;left:0px;width:100%;height:100%;z-index:' + e.css("zIndex") + '" class="tp-parallax-container" data-parallaxlevel="' + b.parallaxLevels[d - 1] + '"></div>')
                })
            }
        });
        if (b.parallax == "mouse" || b.parallax == "scroll+mouse" || b.parallax == "mouse+scroll") {
            a.mouseenter(function(g) {
                var j = a.find(".current-sr-slide-visible");
                var f = a.offset().top,
                    c = a.offset().left,
                    d = g.pageX - c,
                    h = g.pageY - f;
                j.data("enterx", d);
                j.data("entery", h)
            });
            a.on("mousemove.hoverdir, mouseleave.hoverdir", function(l) {
                var h = a.find(".current-sr-slide-visible");
                switch (l.type) {
                    case "mousemove":
                        var e = a.offset().top,
                            g = a.offset().left,
                            k = h.data("enterx"),
                            d = h.data("entery"),
                            c = k - (l.pageX - g),
                            j = d - (l.pageY - e);
                        h.find(".tp-parallax-container").each(function() {
                            var m = a0(this),
                                p = parseInt(m.data("parallaxlevel"), 0) / 100,
                                o = c * p,
                                f = j * p;
                            punchgs.TweenLite.to(m, 0.4, {
                                force3D: "auto",
                                x: o,
                                y: f,
                                ease: punchgs.Power3.easeOut,
                                overwrite: "all"
                            })
                        });
                        break;
                    case "mouseleave":
                        h.find(".tp-parallax-container").each(function() {
                            var f = a0(this);
                            punchgs.TweenLite.to(f, 1.5, {
                                force3D: "auto",
                                x: 0,
                                y: 0,
                                ease: punchgs.Power3.easeOut
                            })
                        });
                        break
                }
            });
            if (aC()) {
                window.ondeviceorientation = function(j) {
                    var g = Math.round(j.beta || 0),
                        e = Math.round(j.gamma || 0);
                    var f = a.find(".current-sr-slide-visible");
                    if (a0(window).width() > a0(window).height()) {
                        var h = e;
                        e = g;
                        g = h
                    }
                    var d = 360 / a.width() * e,
                        c = 180 / a.height() * g;
                    f.find(".tp-parallax-container").each(function() {
                        var l = a0(this),
                            o = parseInt(l.data("parallaxlevel"), 0) / 100,
                            m = d * o,
                            k = c * o;
                        punchgs.TweenLite.to(l, 0.2, {
                            force3D: "auto",
                            x: m,
                            y: k,
                            ease: punchgs.Power3.easeOut
                        })
                    })
                }
            }
        }
        if (b.parallax == "scroll" || b.parallax == "scroll+mouse" || b.parallax == "mouse+scroll") {
            a0(window).on("scroll", function(c) {
                aN(a, b)
            })
        }
    };
    var aN = function(q, e) {
        if (aC() && e.parallaxDisableOnMobile == "on") {
            return false
        }
        var b = q.offset().top,
            h = a0(window).scrollTop(),
            v = b + q.height() / 2,
            d = b + q.height() / 2 - h,
            p = a0(window).height() / 2,
            m = p - d;
        if (v < p) {
            m = m - (p - v)
        }
        var j = q.find(".current-sr-slide-visible");
        q.find(".tp-parallax-container").each(function(c) {
            var l = a0(this),
                f = parseInt(l.data("parallaxlevel"), 0) / 100,
                a = m * f;
            l.data("parallaxoffset", a);
            punchgs.TweenLite.to(l, 0.2, {
                force3D: "auto",
                y: a,
                ease: punchgs.Power3.easeOut
            })
        });
        if (e.parallaxBgFreeze != "on") {
            var g = e.parallaxLevels[0] / 100,
                k = m * g;
            punchgs.TweenLite.to(q, 0.2, {
                force3D: "auto",
                y: k,
                ease: punchgs.Power3.easeOut
            })
        }
    };
    var aY = function(k, g) {
        var d = k.parent();
        if (g.navigationType == "thumb" || g.navsecond == "both") {
            d.append('<div class="tp-bullets tp-thumbs ' + g.navigationStyle + '"><div class="tp-mask"><div class="tp-thumbcontainer"></div></div></div>')
        }
        var e = d.find(".tp-bullets.tp-thumbs .tp-mask .tp-thumbcontainer");
        var j = e.parent();
        j.width(g.thumbWidth * g.thumbAmount);
        j.height(g.thumbHeight);
        j.parent().width(g.thumbWidth * g.thumbAmount);
        j.parent().height(g.thumbHeight);
        k.find(">ul:first >li").each(function(n) {
            var m = k.find(">ul:first >li:eq(" + n + ")");
            var p = m.find(".defaultimg").css("backgroundColor");
            if (m.data("thumb") != aJ) {
                var l = m.data("thumb")
            } else {
                var l = m.find("img:first").attr("src")
            }
            e.append('<div class="bullet thumb" style="background-color:' + p + ";position:relative;width:" + g.thumbWidth + "px;height:" + g.thumbHeight + "px;background-image:url(" + l + ') !important;background-size:cover;background-position:center center;"></div>');
            var f = e.find(".bullet:first")
        });
        var c = 10;
        e.find(".bullet").each(function(f) {
            var a = a0(this);
            if (f == g.slideamount - 1) {
                a.addClass("last")
            }
            if (f == 0) {
                a.addClass("first")
            }
            a.width(g.thumbWidth);
            a.height(g.thumbHeight);
            if (c < a.outerWidth(true)) {
                c = a.outerWidth(true)
            }
            a.click(function() {
                if (g.transition == 0 && a.index() != g.act) {
                    g.next = a.index();
                    aI(g, k)
                }
            })
        });
        var h = c * k.find(">ul:first >li").length;
        var b = e.parent().width();
        g.thumbWidth = c;
        if (b < h) {
            a0(document).mousemove(function(a) {
                a0("body").data("mousex", a.pageX)
            });
            e.parent().mouseenter(function() {
                var y = a0(this);
                y.addClass("over");
                var m = y.offset();
                var q = a0("body").data("mousex") - m.left;
                var z = y.width();
                var n = y.find(".bullet:first").outerWidth(true);
                var x = n * k.find(">ul:first >li").length;
                var w = x - z + 15;
                var v = w / z;
                q = q - 30;
                var p = 0 - q * v;
                if (p > 0) {
                    p = 0
                }
                if (p < 0 - x + z) {
                    p = 0 - x + z
                }
                aB(y, p, 200)
            });
            e.parent().mousemove(function() {
                var y = a0(this);
                var m = y.offset();
                var q = a0("body").data("mousex") - m.left;
                var z = y.width();
                var n = y.find(".bullet:first").outerWidth(true);
                var x = n * k.find(">ul:first >li").length - 1;
                var w = x - z + 15;
                var v = w / z;
                q = q - 3;
                if (q < 6) {
                    q = 0
                }
                if (q + 3 > z - 6) {
                    q = z
                }
                var p = 0 - q * v;
                if (p > 0) {
                    p = 0
                }
                if (p < 0 - x + z) {
                    p = 0 - x + z
                }
                aB(y, p, 0)
            });
            e.parent().mouseleave(function() {
                var a = a0(this);
                a.removeClass("over");
                aU(k)
            })
        }
    };
    var aU = function(k) {
        var q = k.parent().find(".tp-bullets.tp-thumbs .tp-mask .tp-thumbcontainer");
        var d = q.parent();
        var b = d.offset();
        var h = d.find(".bullet:first").outerWidth(true);
        var v = d.find(".bullet.selected").index() * h;
        var c = d.width();
        var h = d.find(".bullet:first").outerWidth(true);
        var p = h * k.find(">ul:first >li").length;
        var m = p - c;
        var j = m / c;
        var g = 0 - v;
        if (g > 0) {
            g = 0
        }
        if (g < 0 - p + c) {
            g = 0 - p + c
        }
        if (!d.hasClass("over")) {
            aB(d, g, 200)
        }
    };
    var aB = function(b, a, c) {
        punchgs.TweenLite.to(b.find(".tp-thumbcontainer"), 0.2, {
            force3D: "auto",
            left: a,
            ease: punchgs.Power3.easeOut,
            overwrite: "auto"
        })
    }
})(jQuery);
